{"version":3,"file":"IdentityProvidersSection-cbd88aab.js","sources":["../../../../node_modules/lodash-es/_arrayAggregator.js","../../../../node_modules/lodash-es/_baseAggregator.js","../../../../node_modules/lodash-es/_createAggregator.js","../../../../node_modules/lodash-es/groupBy.js","../../../../node_modules/@patternfly/react-core/dist/esm/components/Dropdown/DropdownGroup.js","../../src/identity-providers/ManageOrderDialog.tsx","../../src/identity-providers/IdentityProvidersSection.tsx"],"sourcesContent":["/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownContext } from './dropdownConstants';\nexport const DropdownGroup = (_a) => {\n    var { children = null, className = '', label = '' } = _a, props = __rest(_a, [\"children\", \"className\", \"label\"]);\n    return (React.createElement(DropdownContext.Consumer, null, ({ sectionClass, sectionTitleClass, sectionComponent }) => {\n        const SectionComponent = sectionComponent;\n        return (React.createElement(SectionComponent, Object.assign({ className: css(sectionClass, className) }, props),\n            label && (React.createElement(\"h1\", { className: css(sectionTitleClass), \"aria-hidden\": true }, label)),\n            React.createElement(\"ul\", { role: \"none\" }, children)));\n    }));\n};\nDropdownGroup.displayName = 'DropdownGroup';\n//# sourceMappingURL=DropdownGroup.js.map","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { sortBy } from \"lodash-es\";\nimport {\n  Button,\n  ButtonVariant,\n  DataList,\n  DataListCell,\n  DataListControl,\n  DataListDragButton,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  Modal,\n  ModalVariant,\n  TextContent,\n  Text,\n} from \"@patternfly/react-core\";\nimport type IdentityProviderRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/identityProviderRepresentation\";\nimport { useAdminClient } from \"../context/auth/AdminClient\";\nimport { useAlerts } from \"../components/alert/Alerts\";\n\ntype ManageOrderDialogProps = {\n  providers: IdentityProviderRepresentation[];\n  onClose: () => void;\n};\n\nexport const ManageOrderDialog = ({\n  providers,\n  onClose,\n}: ManageOrderDialogProps) => {\n  const { t } = useTranslation(\"identity-providers\");\n  const { adminClient } = useAdminClient();\n  const { addAlert, addError } = useAlerts();\n\n  const [alias, setAlias] = useState(\"\");\n  const [liveText, setLiveText] = useState(\"\");\n  const [order, setOrder] = useState(\n    providers.map((provider) => provider.alias!)\n  );\n\n  const onDragStart = (id: string) => {\n    setAlias(id);\n    setLiveText(t(\"common:onDragStart\", { item: id }));\n  };\n\n  const onDragMove = () => {\n    setLiveText(t(\"common:onDragMove\", { item: alias }));\n  };\n\n  const onDragCancel = () => {\n    setLiveText(t(\"common:onDragCancel\"));\n  };\n\n  const onDragFinish = (providerOrder: string[]) => {\n    setLiveText(t(\"common:onDragFinish\", { list: providerOrder }));\n    setOrder(providerOrder);\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.small}\n      title={t(\"manageDisplayOrder\")}\n      isOpen={true}\n      onClose={onClose}\n      actions={[\n        <Button\n          id=\"modal-confirm\"\n          data-testid=\"confirm\"\n          key=\"confirm\"\n          onClick={async () => {\n            const updates = order.map((alias, index) => {\n              const provider = providers.find((p) => p.alias === alias)!;\n              provider.config!.guiOrder = index;\n              return adminClient.identityProviders.update({ alias }, provider);\n            });\n\n            try {\n              await Promise.all(updates);\n              addAlert(t(\"orderChangeSuccess\"));\n            } catch (error) {\n              addError(\"identity-providers:orderChangeError\", error);\n            }\n\n            onClose();\n          }}\n        >\n          {t(\"common:save\")}\n        </Button>,\n        <Button\n          id=\"modal-cancel\"\n          data-testid=\"cancel\"\n          key=\"cancel\"\n          variant={ButtonVariant.link}\n          onClick={onClose}\n        >\n          {t(\"common:cancel\")}\n        </Button>,\n      ]}\n    >\n      <TextContent className=\"pf-u-pb-lg\">\n        <Text>{t(\"orderDialogIntro\")}</Text>\n      </TextContent>\n\n      <DataList\n        aria-label={t(\"manageOrderTableAria\")}\n        data-testid=\"manageOrderDataList\"\n        isCompact\n        onDragFinish={onDragFinish}\n        onDragStart={onDragStart}\n        onDragMove={onDragMove}\n        onDragCancel={onDragCancel}\n        itemOrder={order}\n      >\n        {sortBy(providers, \"config.guiOrder\", \"alias\").map((provider) => (\n          <DataListItem\n            aria-label={provider.alias}\n            id={provider.alias}\n            key={provider.alias}\n          >\n            <DataListItemRow>\n              <DataListControl>\n                <DataListDragButton aria-label={t(\"common-help:dragHelp\")} />\n              </DataListControl>\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell\n                    key={provider.alias}\n                    data-testid={provider.alias}\n                  >\n                    {provider.alias}\n                  </DataListCell>,\n                ]}\n              />\n            </DataListItemRow>\n          </DataListItem>\n        ))}\n      </DataList>\n      <div className=\"pf-screen-reader\" aria-live=\"assertive\">\n        {liveText}\n      </div>\n    </Modal>\n  );\n};\n","import {\n  AlertVariant,\n  Badge,\n  Button,\n  ButtonVariant,\n  CardTitle,\n  Dropdown,\n  DropdownGroup,\n  DropdownItem,\n  DropdownToggle,\n  Gallery,\n  PageSection,\n  Spinner,\n  Split,\n  SplitItem,\n  Text,\n  TextContent,\n  TextVariants,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport { groupBy, sortBy } from \"lodash-es\";\nimport { Fragment, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport type IdentityProviderRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/identityProviderRepresentation\";\nimport { IconMapper } from \"ui-shared\";\nimport { useAlerts } from \"../components/alert/Alerts\";\nimport { useConfirmDialog } from \"../components/confirm-dialog/ConfirmDialog\";\nimport { ClickableCard } from \"../components/keycloak-card/ClickableCard\";\nimport {\n  Action,\n  KeycloakDataTable,\n} from \"../components/table-toolbar/KeycloakDataTable\";\nimport { ViewHeader } from \"../components/view-header/ViewHeader\";\nimport { useAdminClient, useFetch } from \"../context/auth/AdminClient\";\nimport { useRealm } from \"../context/realm-context/RealmContext\";\nimport { useServerInfo } from \"../context/server-info/ServerInfoProvider\";\nimport helpUrls from \"../help-urls\";\nimport { upperCaseFormatter } from \"../util\";\nimport { ManageOrderDialog } from \"./ManageOrderDialog\";\nimport { toIdentityProvider } from \"./routes/IdentityProvider\";\nimport { toIdentityProviderCreate } from \"./routes/IdentityProviderCreate\";\n\nconst DetailLink = (identityProvider: IdentityProviderRepresentation) => {\n  const { t } = useTranslation(\"identity-providers\");\n  const { realm } = useRealm();\n\n  return (\n    <Link\n      key={identityProvider.providerId}\n      to={toIdentityProvider({\n        realm,\n        providerId: identityProvider.providerId!,\n        alias: identityProvider.alias!,\n        tab: \"settings\",\n      })}\n    >\n      {identityProvider.displayName || identityProvider.alias}\n      {!identityProvider.enabled && (\n        <Badge\n          key={`${identityProvider.providerId}-disabled`}\n          isRead\n          className=\"pf-u-ml-sm\"\n        >\n          {t(\"common:disabled\")}\n        </Badge>\n      )}\n    </Link>\n  );\n};\n\nexport default function IdentityProvidersSection() {\n  const { t } = useTranslation(\"identity-providers\");\n  const identityProviders = groupBy(\n    useServerInfo().identityProviders,\n    \"groupName\"\n  );\n  const { realm } = useRealm();\n  const navigate = useNavigate();\n  const [key, setKey] = useState(0);\n  const refresh = () => setKey(key + 1);\n\n  const [addProviderOpen, setAddProviderOpen] = useState(false);\n  const [manageDisplayDialog, setManageDisplayDialog] = useState(false);\n  const [providers, setProviders] =\n    useState<IdentityProviderRepresentation[]>();\n  const [selectedProvider, setSelectedProvider] =\n    useState<IdentityProviderRepresentation>();\n\n  const { adminClient } = useAdminClient();\n  const { addAlert, addError } = useAlerts();\n\n  useFetch(\n    async () => {\n      const provider = await adminClient.realms.findOne({ realm });\n      if (!provider) {\n        throw new Error(t(\"common:notFound\"));\n      }\n      return provider.identityProviders!;\n    },\n    (providers) => {\n      setProviders(sortBy(providers, [\"config.guiOrder\", \"alias\"]));\n    },\n    [key]\n  );\n\n  const navigateToCreate = (providerId: string) =>\n    navigate(\n      toIdentityProviderCreate({\n        realm,\n        providerId,\n      })\n    );\n\n  const identityProviderOptions = () =>\n    Object.keys(identityProviders).map((group) => (\n      <DropdownGroup key={group} label={group}>\n        {sortBy(identityProviders[group], \"name\").map((provider) => (\n          <DropdownItem\n            key={provider.id}\n            value={provider.id}\n            component={\n              <Link\n                to={toIdentityProviderCreate({\n                  realm,\n                  providerId: provider.id,\n                })}\n                data-testid={provider.id}\n              >\n                {provider.name}\n              </Link>\n            }\n          />\n        ))}\n      </DropdownGroup>\n    ));\n\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: \"identity-providers:deleteProvider\",\n    messageKey: t(\"deleteConfirm\", { provider: selectedProvider?.alias }),\n    continueButtonLabel: \"common:delete\",\n    continueButtonVariant: ButtonVariant.danger,\n    onConfirm: async () => {\n      try {\n        await adminClient.identityProviders.del({\n          alias: selectedProvider!.alias!,\n        });\n        setProviders([\n          ...providers!.filter((p) => p.alias !== selectedProvider?.alias),\n        ]);\n        refresh();\n        addAlert(t(\"deletedSuccess\"), AlertVariant.success);\n      } catch (error) {\n        addError(\"identity-providers:deleteError\", error);\n      }\n    },\n  });\n\n  if (!providers) {\n    return <Spinner />;\n  }\n\n  return (\n    <>\n      <DeleteConfirm />\n      {manageDisplayDialog && (\n        <ManageOrderDialog\n          onClose={() => {\n            setManageDisplayDialog(false);\n            refresh();\n          }}\n          providers={providers.filter((p) => p.enabled)}\n        />\n      )}\n      <ViewHeader\n        titleKey=\"common:identityProviders\"\n        subKey=\"identity-providers:listExplain\"\n        helpUrl={helpUrls.identityProvidersUrl}\n      />\n      <PageSection\n        variant={providers.length === 0 ? \"default\" : \"light\"}\n        className={providers.length === 0 ? \"\" : \"pf-u-p-0\"}\n      >\n        {providers.length === 0 && (\n          <>\n            <TextContent>\n              <Text component={TextVariants.p}>{t(\"getStarted\")}</Text>\n            </TextContent>\n            {Object.keys(identityProviders).map((group) => (\n              <Fragment key={group}>\n                <TextContent>\n                  <Text className=\"pf-u-mt-lg\" component={TextVariants.h2}>\n                    {group}:\n                  </Text>\n                </TextContent>\n                <hr className=\"pf-u-mb-lg\" />\n                <Gallery hasGutter>\n                  {sortBy(identityProviders[group], \"name\").map((provider) => (\n                    <ClickableCard\n                      key={provider.id}\n                      data-testid={`${provider.id}-card`}\n                      onClick={() => navigateToCreate(provider.id)}\n                    >\n                      <CardTitle>\n                        <Split hasGutter>\n                          <SplitItem>\n                            <IconMapper icon={provider.id} />\n                          </SplitItem>\n                          <SplitItem isFilled>{provider.name}</SplitItem>\n                        </Split>\n                      </CardTitle>\n                    </ClickableCard>\n                  ))}\n                </Gallery>\n              </Fragment>\n            ))}\n          </>\n        )}\n        {providers.length !== 0 && (\n          <KeycloakDataTable\n            loader={providers}\n            ariaLabelKey=\"common:identityProviders\"\n            searchPlaceholderKey=\"identity-providers:searchForProvider\"\n            toolbarItem={\n              <>\n                <ToolbarItem>\n                  <Dropdown\n                    data-testid=\"addProviderDropdown\"\n                    toggle={\n                      <DropdownToggle\n                        onToggle={() => setAddProviderOpen(!addProviderOpen)}\n                        isPrimary\n                      >\n                        {t(\"addProvider\")}\n                      </DropdownToggle>\n                    }\n                    isOpen={addProviderOpen}\n                    dropdownItems={identityProviderOptions()}\n                  />\n                </ToolbarItem>\n\n                <ToolbarItem>\n                  <Button\n                    data-testid=\"manageDisplayOrder\"\n                    variant=\"link\"\n                    onClick={() => setManageDisplayDialog(true)}\n                  >\n                    {t(\"manageDisplayOrder\")}\n                  </Button>\n                </ToolbarItem>\n              </>\n            }\n            actions={[\n              {\n                title: t(\"common:delete\"),\n                onRowClick: (provider) => {\n                  setSelectedProvider(provider);\n                  toggleDeleteDialog();\n                },\n              } as Action<IdentityProviderRepresentation>,\n            ]}\n            columns={[\n              {\n                name: \"alias\",\n                displayKey: \"common:name\",\n                cellRenderer: DetailLink,\n              },\n              {\n                name: \"providerId\",\n                displayKey: \"identity-providers:providerDetails\",\n                cellFormatters: [upperCaseFormatter()],\n              },\n            ]}\n          />\n        )}\n      </PageSection>\n    </>\n  );\n}\n"],"names":["arrayAggregator","array","setter","iteratee","accumulator","index","length","value","baseAggregator","collection","baseEach","key","createAggregator","initializer","func","isArray","baseIteratee","objectProto","hasOwnProperty","groupBy","result","baseAssignValue","groupBy$1","DropdownGroup","_a","children","className","label","props","__rest","React.createElement","DropdownContext","sectionClass","sectionTitleClass","sectionComponent","SectionComponent","css","ManageOrderDialog","providers","onClose","useTranslation","adminClient","useAdminClient","addAlert","addError","useAlerts","alias","setAlias","useState","liveText","setLiveText","order","setOrder","provider","onDragStart","id","onDragMove","onDragCancel","onDragFinish","providerOrder","jsxs","Modal","ModalVariant","jsx","Button","updates","p","error","ButtonVariant","TextContent","Text","DataList","DataListItem","DataListItemRow","DataListControl","DataListDragButton","DataListItemCells","DataListCell","DetailLink","identityProvider","t","realm","useRealm","Link","toIdentityProvider","Badge","IdentityProvidersSection","identityProviders","useServerInfo","navigate","useNavigate","setKey","refresh","addProviderOpen","setAddProviderOpen","manageDisplayDialog","setManageDisplayDialog","setProviders","selectedProvider","setSelectedProvider","useFetch","sortBy","navigateToCreate","providerId","toIdentityProviderCreate","identityProviderOptions","group","DropdownItem","toggleDeleteDialog","DeleteConfirm","useConfirmDialog","AlertVariant","Fragment","ViewHeader","helpUrls","PageSection","TextVariants","Gallery","ClickableCard","CardTitle","Split","SplitItem","IconMapper","KeycloakDataTable","ToolbarItem","Dropdown","DropdownToggle","upperCaseFormatter","Spinner"],"mappings":"mwCAUA,SAASA,GAAgBC,EAAOC,EAAQC,EAAUC,EAAa,CAI7D,QAHIC,EAAQ,GACRC,EAASL,GAAS,KAAO,EAAIA,EAAM,OAEhC,EAAEI,EAAQC,GAAQ,CACvB,IAAIC,EAAQN,EAAMI,CAAK,EACvBH,EAAOE,EAAaG,EAAOJ,EAASI,CAAK,EAAGN,CAAK,EAEnD,OAAOG,CACT,CCNA,SAASI,GAAeC,EAAYP,EAAQC,EAAUC,EAAa,CACjE,OAAAM,EAASD,EAAY,SAASF,EAAOI,EAAKF,EAAY,CACpDP,EAAOE,EAAaG,EAAOJ,EAASI,CAAK,EAAGE,CAAU,CAC1D,CAAG,EACML,CACT,CCLA,SAASQ,GAAiBV,EAAQW,EAAa,CAC7C,OAAO,SAASJ,EAAYN,EAAU,CACpC,IAAIW,EAAOC,EAAQN,CAAU,EAAIT,GAAkBQ,GAC/CJ,EAAcS,EAAcA,EAAa,EAAG,GAEhD,OAAOC,EAAKL,EAAYP,EAAQc,EAAab,CAAW,EAAGC,CAAW,CAC1E,CACA,CChBA,IAAIa,GAAc,OAAO,UAGrBC,GAAiBD,GAAY,eAyB7BE,GAAUP,GAAiB,SAASQ,EAAQb,EAAOI,EAAK,CACtDO,GAAe,KAAKE,EAAQT,CAAG,EACjCS,EAAOT,CAAG,EAAE,KAAKJ,CAAK,EAEtBc,EAAgBD,EAAQT,EAAK,CAACJ,CAAK,CAAC,CAExC,CAAC,EAED,MAAAe,GAAeH,GCpCFI,EAAiBC,GAAO,CACjC,GAAI,CAAE,SAAAC,EAAW,KAAM,UAAAC,EAAY,GAAI,MAAAC,EAAQ,EAAI,EAAGH,EAAII,EAAQC,EAAOL,EAAI,CAAC,WAAY,YAAa,OAAO,CAAC,EAC/G,OAAQM,EAAmB,cAACC,EAAgB,SAAU,KAAM,CAAC,CAAE,aAAAC,EAAc,kBAAAC,EAAmB,iBAAAC,KAAuB,CACnH,MAAMC,EAAmBD,EACzB,OAAQJ,gBAAoBK,EAAkB,OAAO,OAAO,CAAE,UAAWC,EAAIJ,EAAcN,CAAS,CAAC,EAAIE,CAAK,EAC1GD,GAAUG,EAAmB,cAAC,KAAM,CAAE,UAAWM,EAAIH,CAAiB,EAAG,cAAe,EAAM,EAAEN,CAAK,EACrGG,EAAmB,cAAC,KAAM,CAAE,KAAM,MAAQ,EAAEL,CAAQ,CAAC,CACjE,CAAK,CACL,EACAF,EAAc,YAAc,gBCcrB,MAAMc,GAAoB,CAAC,CAChC,UAAAC,EACA,QAAAC,CACF,IAA8B,CAC5B,KAAM,CAAE,CAAA,EAAMC,EAAe,oBAAoB,EAC3C,CAAE,YAAAC,GAAgBC,IAClB,CAAE,SAAAC,EAAU,SAAAC,CAAS,EAAIC,EAAU,EAEnC,CAACC,EAAOC,CAAQ,EAAIC,WAAS,EAAE,EAC/B,CAACC,EAAUC,CAAW,EAAIF,WAAS,EAAE,EACrC,CAACG,EAAOC,CAAQ,EAAIJ,EAAA,SACxBV,EAAU,IAAKe,GAAaA,EAAS,KAAM,CAAA,EAGvCC,EAAeC,GAAe,CAClCR,EAASQ,CAAE,EACXL,EAAY,EAAE,qBAAsB,CAAE,KAAMK,CAAI,CAAA,CAAC,CAAA,EAG7CC,EAAa,IAAM,CACvBN,EAAY,EAAE,oBAAqB,CAAE,KAAMJ,CAAO,CAAA,CAAC,CAAA,EAG/CW,EAAe,IAAM,CACbP,EAAA,EAAE,qBAAqB,CAAC,CAAA,EAGhCQ,EAAgBC,GAA4B,CAChDT,EAAY,EAAE,sBAAuB,CAAE,KAAMS,CAAe,CAAA,CAAC,EAC7DP,EAASO,CAAa,CAAA,EAItB,OAAAC,EAAA,KAACC,GAAA,CACC,QAASC,GAAa,MACtB,MAAO,EAAE,oBAAoB,EAC7B,OAAQ,GACR,QAAAvB,EACA,QAAS,CACPwB,EAAA,IAACC,EAAA,CACC,GAAG,gBACH,cAAY,UAEZ,QAAS,SAAY,CACnB,MAAMC,EAAUd,EAAM,IAAI,CAACL,EAAOzC,IAAU,CAC1C,MAAMgD,EAAWf,EAAU,KAAM4B,GAAMA,EAAE,QAAUpB,CAAK,EACxD,OAAAO,EAAS,OAAQ,SAAWhD,EACrBoC,EAAY,kBAAkB,OAAO,CAAE,MAAAK,CAAAA,EAASO,CAAQ,CAAA,CAChE,EAEG,GAAA,CACI,MAAA,QAAQ,IAAIY,CAAO,EAChBtB,EAAA,EAAE,oBAAoB,CAAC,QACzBwB,GACPvB,EAAS,sCAAuCuB,CAAK,CACvD,CAEQ5B,GACV,EAEC,WAAE,aAAa,CAAA,EAlBZ,SAmBN,EACAwB,EAAA,IAACC,EAAA,CACC,GAAG,eACH,cAAY,SAEZ,QAASI,EAAc,KACvB,QAAS7B,EAER,WAAE,eAAe,CAAA,EAJd,QAKN,CACF,EAEA,SAAA,CAACwB,EAAAA,IAAAM,EAAA,CAAY,UAAU,aACrB,SAAAN,EAAAA,IAACO,GAAM,SAAE,EAAA,kBAAkB,EAAE,CAC/B,CAAA,EAEAP,EAAA,IAACQ,GAAA,CACC,aAAY,EAAE,sBAAsB,EACpC,cAAY,sBACZ,UAAS,GACT,aAAAb,EACA,YAAAJ,EACA,WAAAE,EACA,aAAAC,EACA,UAAWN,EAEV,WAAOb,EAAW,kBAAmB,OAAO,EAAE,IAAKe,GAClDU,EAAA,IAACS,GAAA,CACC,aAAYnB,EAAS,MACrB,GAAIA,EAAS,MAGb,gBAACoB,GACC,CAAA,SAAA,CAAAV,EAAAA,IAACW,IACC,SAACX,MAAAY,GAAA,CAAmB,aAAY,EAAE,sBAAsB,EAAG,CAC7D,CAAA,EACAZ,EAAA,IAACa,GAAA,CACC,cAAe,CACbb,EAAA,IAACc,GAAA,CAEC,cAAaxB,EAAS,MAErB,SAASA,EAAA,KAAA,EAHLA,EAAS,KAIhB,CACF,CAAA,CACF,CAAA,EACF,CAAA,EAhBKA,EAAS,KAAA,CAkBjB,CAAA,CACH,QACC,MAAI,CAAA,UAAU,mBAAmB,YAAU,YACzC,SACHJ,EAAA,CAAA,CAAA,CAAA,CAGN,ECnGM6B,GAAcC,GAAqD,CACvE,KAAM,CAAE,EAAAC,CAAA,EAAMxC,EAAe,oBAAoB,EAC3C,CAAE,MAAAyC,GAAUC,IAGhB,OAAAtB,EAAA,KAACuB,EAAA,CAEC,GAAIC,GAAmB,CACrB,MAAAH,EACA,WAAYF,EAAiB,WAC7B,MAAOA,EAAiB,MACxB,IAAK,UAAA,CACN,EAEA,SAAA,CAAAA,EAAiB,aAAeA,EAAiB,MACjD,CAACA,EAAiB,SACjBhB,EAAA,IAACsB,GAAA,CAEC,OAAM,GACN,UAAU,aAET,WAAE,iBAAiB,CAAA,EAJf,GAAGN,EAAiB,qBAK3B,CAAA,CAAA,EAhBGA,EAAiB,UAAA,CAoB5B,EAEA,SAAwBO,IAA2B,CACjD,KAAM,CAAE,EAAAN,CAAA,EAAMxC,EAAe,oBAAoB,EAC3C+C,EAAoBpE,GACxBqE,EAAgB,EAAA,kBAChB,WAAA,EAEI,CAAE,MAAAP,GAAUC,IACZO,EAAWC,IACX,CAAC/E,EAAKgF,CAAM,EAAI3C,WAAS,CAAC,EAC1B4C,EAAU,IAAMD,EAAOhF,EAAM,CAAC,EAE9B,CAACkF,EAAiBC,CAAkB,EAAI9C,WAAS,EAAK,EACtD,CAAC+C,EAAqBC,CAAsB,EAAIhD,WAAS,EAAK,EAC9D,CAACV,EAAW2D,CAAY,EAC5BjD,EAA2C,SAAA,EACvC,CAACkD,EAAkBC,CAAmB,EAC1CnD,EAAyC,SAAA,EAErC,CAAE,YAAAP,GAAgBC,IAClB,CAAE,SAAAC,EAAU,SAAAC,CAAS,EAAIC,EAAU,EAEzCuD,EACE,SAAY,CACV,MAAM/C,EAAW,MAAMZ,EAAY,OAAO,QAAQ,CAAE,MAAAwC,EAAO,EAC3D,GAAI,CAAC5B,EACH,MAAM,IAAI,MAAM2B,EAAE,iBAAiB,CAAC,EAEtC,OAAO3B,EAAS,iBAClB,EACCf,GAAc,CACb2D,EAAaI,EAAO/D,EAAW,CAAC,kBAAmB,OAAO,CAAC,CAAC,CAC9D,EACA,CAAC3B,CAAG,CAAA,EAGA,MAAA2F,EAAoBC,GACxBd,EACEe,EAAyB,CACvB,MAAAvB,EACA,WAAAsB,CAAA,CACD,CAAA,EAGCE,EAA0B,IAC9B,OAAO,KAAKlB,CAAiB,EAAE,IAAKmB,GAClC3C,EAAA,IAACxC,GAA0B,MAAOmF,EAC/B,WAAOnB,EAAkBmB,CAAK,EAAG,MAAM,EAAE,IAAKrD,GAC7CU,EAAA,IAAC4C,GAAA,CAEC,MAAOtD,EAAS,GAChB,UACEU,EAAA,IAACoB,EAAA,CACC,GAAIqB,EAAyB,CAC3B,MAAAvB,EACA,WAAY5B,EAAS,EAAA,CACtB,EACD,cAAaA,EAAS,GAErB,SAASA,EAAA,IAAA,CACZ,CAAA,EAXGA,EAAS,EAAA,CAcjB,CAjBiB,EAAAqD,CAkBpB,CACD,EAEG,CAACE,EAAoBC,CAAa,EAAIC,GAAiB,CAC3D,SAAU,oCACV,WAAY9B,EAAE,gBAAiB,CAAE,SAAUkB,GAAkB,MAAO,EACpE,oBAAqB,gBACrB,sBAAuB9B,EAAc,OACrC,UAAW,SAAY,CACjB,GAAA,CACI,MAAA3B,EAAY,kBAAkB,IAAI,CACtC,MAAOyD,EAAkB,KAAA,CAC1B,EACYD,EAAA,CACX,GAAG3D,EAAW,OAAQ4B,GAAMA,EAAE,QAAUgC,GAAkB,KAAK,CAAA,CAChE,EACON,IACRjD,EAASqC,EAAE,gBAAgB,EAAG+B,EAAa,OAAO,QAC3C5C,GACPvB,EAAS,iCAAkCuB,CAAK,CAClD,CACF,CAAA,CACD,EAED,OAAK7B,EAMDsB,EAAA,KAAAoD,WAAA,CAAA,SAAA,CAAAjD,EAAA,IAAC8C,EAAc,EAAA,EACdd,GACChC,EAAA,IAAC1B,GAAA,CACC,QAAS,IAAM,CACb2D,EAAuB,EAAK,EACpBJ,GACV,EACA,UAAWtD,EAAU,OAAQ4B,GAAMA,EAAE,OAAO,CAAA,CAC9C,EAEFH,EAAA,IAACkD,GAAA,CACC,SAAS,2BACT,OAAO,iCACP,QAASC,EAAS,oBAAA,CACpB,EACAtD,EAAA,KAACuD,GAAA,CACC,QAAS7E,EAAU,SAAW,EAAI,UAAY,QAC9C,UAAWA,EAAU,SAAW,EAAI,GAAK,WAExC,SAAA,CAAUA,EAAA,SAAW,GAElBsB,EAAA,KAAAoD,EAAA,SAAA,CAAA,SAAA,CAACjD,EAAAA,IAAAM,EAAA,CACC,eAACC,EAAK,CAAA,UAAW8C,EAAa,EAAI,SAAApC,EAAE,YAAY,CAAA,CAAE,CACpD,CAAA,EACC,OAAO,KAAKO,CAAiB,EAAE,IAAKmB,GAClCM,EAAAA,KAAAA,WAAA,CACC,SAAA,CAAAjD,EAAAA,IAACM,GACC,SAACT,EAAA,KAAAU,EAAA,CAAK,UAAU,aAAa,UAAW8C,EAAa,GAClD,SAAA,CAAAV,EAAM,GAAA,CAAA,CACT,CACF,CAAA,EACA3C,EAAAA,IAAC,KAAG,CAAA,UAAU,YAAa,CAAA,EAC1BA,EAAAA,IAAAsD,GAAA,CAAQ,UAAS,GACf,SAAOhB,EAAAd,EAAkBmB,CAAK,EAAG,MAAM,EAAE,IAAKrD,GAC7CU,EAAA,IAACuD,GAAA,CAEC,cAAa,GAAGjE,EAAS,UACzB,QAAS,IAAMiD,EAAiBjD,EAAS,EAAE,EAE3C,SAACU,EAAAA,IAAAwD,GAAA,CACC,SAAC3D,OAAA4D,GAAA,CAAM,UAAS,GACd,SAAA,CAAAzD,EAAAA,IAAC0D,GACC,SAAC1D,MAAA2D,GAAA,CAAW,KAAMrE,EAAS,EAAI,CAAA,EACjC,EACCU,EAAA,IAAA0D,EAAA,CAAU,SAAQ,GAAE,WAAS,KAAK,CAAA,CAAA,CACrC,CACF,CAAA,CAAA,EAXKpE,EAAS,EAajB,CAAA,EACH,CAAA,CAAA,EAxBaqD,CAyBf,CACD,CAAA,EACH,EAEDpE,EAAU,SAAW,GACpByB,EAAA,IAAC4D,GAAA,CACC,OAAQrF,EACR,aAAa,2BACb,qBAAqB,uCACrB,YAEIsB,EAAA,KAAAoD,WAAA,CAAA,SAAA,CAAAjD,MAAC6D,EACC,CAAA,SAAA7D,EAAA,IAAC8D,GAAA,CACC,cAAY,sBACZ,OACE9D,EAAA,IAAC+D,GAAA,CACC,SAAU,IAAMhC,EAAmB,CAACD,CAAe,EACnD,UAAS,GAER,WAAE,aAAa,CAAA,CAClB,EAEF,OAAQA,EACR,cAAeY,EAAwB,CAAA,CAAA,EAE3C,QAECmB,EACC,CAAA,SAAA7D,EAAA,IAACC,EAAA,CACC,cAAY,qBACZ,QAAQ,OACR,QAAS,IAAMgC,EAAuB,EAAI,EAEzC,WAAE,oBAAoB,CAAA,CAAA,EAE3B,CAAA,EACF,EAEF,QAAS,CACP,CACE,MAAOhB,EAAE,eAAe,EACxB,WAAa3B,GAAa,CACxB8C,EAAoB9C,CAAQ,EACTuD,GACrB,CACF,CACF,EACA,QAAS,CACP,CACE,KAAM,QACN,WAAY,cACZ,aAAc9B,EAChB,EACA,CACE,KAAM,aACN,WAAY,qCACZ,eAAgB,CAACiD,IAAoB,CACvC,CACF,CAAA,CACF,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,QArHQC,EAAQ,CAAA,CAAA,CAuHpB","x_google_ignoreList":[0,1,2,3,4]}