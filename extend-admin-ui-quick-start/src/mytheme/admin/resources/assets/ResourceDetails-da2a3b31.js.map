{"version":3,"file":"ResourceDetails-da2a3b31.js","sources":["../../src/clients/authorization/ScopePicker.tsx","../../src/clients/authorization/ResourceDetails.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\n\nimport type ScopeRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/scopeRepresentation\";\nimport { useAdminClient, useFetch } from \"../../context/auth/AdminClient\";\nimport { HelpItem } from \"ui-shared\";\n\ntype Scope = {\n  id: string;\n  name: string;\n};\n\nexport const ScopePicker = ({ clientId }: { clientId: string }) => {\n  const { t } = useTranslation(\"clients\");\n  const { control } = useFormContext();\n\n  const [open, setOpen] = useState(false);\n  const [scopes, setScopes] = useState<ScopeRepresentation[]>();\n  const [search, setSearch] = useState(\"\");\n\n  const { adminClient } = useAdminClient();\n\n  useFetch(\n    () => {\n      const params = {\n        id: clientId,\n        first: 0,\n        max: 20,\n        deep: false,\n        name: search,\n      };\n      return adminClient.clients.listAllScopes(params);\n    },\n    setScopes,\n    [search]\n  );\n\n  const renderScopes = (scopes?: ScopeRepresentation[]) =>\n    scopes?.map((option) => (\n      <SelectOption key={option.id} value={option}>\n        {option.name}\n      </SelectOption>\n    ));\n\n  return (\n    <FormGroup\n      label={t(\"authorizationScopes\")}\n      labelIcon={\n        <HelpItem\n          helpText={t(\"clients-help:scopes\")}\n          fieldLabelId=\"clients:scopes\"\n        />\n      }\n      fieldId=\"scopes\"\n    >\n      <Controller\n        name=\"scopes\"\n        defaultValue={[]}\n        control={control}\n        render={({ field }) => (\n          <Select\n            toggleId=\"scopes\"\n            variant={SelectVariant.typeaheadMulti}\n            chipGroupProps={{\n              numChips: 3,\n              expandedText: t(\"common:hide\"),\n              collapsedText: t(\"common:showRemaining\"),\n            }}\n            onToggle={setOpen}\n            isOpen={open}\n            selections={field.value.map((o: Scope) => o.name)}\n            onFilter={(_, value) => {\n              setSearch(value);\n              return renderScopes(scopes);\n            }}\n            onSelect={(_, selectedValue) => {\n              const option =\n                typeof selectedValue === \"string\"\n                  ? selectedValue\n                  : (selectedValue as Scope).name;\n              const changedValue = field.value.find(\n                (o: Scope) => o.name === option\n              )\n                ? field.value.filter((item: Scope) => item.name !== option)\n                : [...field.value, selectedValue];\n              field.onChange(changedValue);\n            }}\n            onClear={(event) => {\n              event.stopPropagation();\n              setSearch(\"\");\n              field.onChange([]);\n            }}\n            typeAheadAriaLabel={t(\"authorizationScopes\")}\n          >\n            {renderScopes(scopes)}\n          </Select>\n        )}\n      />\n    </FormGroup>\n  );\n};\n","import type ClientRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/clientRepresentation\";\nimport type ResourceRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/resourceRepresentation\";\nimport type ResourceServerRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/resourceServerRepresentation\";\nimport {\n  ActionGroup,\n  Alert,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  FormGroup,\n  PageSection,\n  Switch,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { Controller, FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { useConfirmDialog } from \"../../components/confirm-dialog/ConfirmDialog\";\nimport { FormAccess } from \"../../components/form-access/FormAccess\";\nimport { HelpItem } from \"ui-shared\";\nimport type { KeyValueType } from \"../../components/key-value-form/key-value-convert\";\nimport { KeyValueInput } from \"../../components/key-value-form/KeyValueInput\";\nimport { KeycloakSpinner } from \"../../components/keycloak-spinner/KeycloakSpinner\";\nimport { KeycloakTextInput } from \"../../components/keycloak-text-input/KeycloakTextInput\";\nimport { MultiLineInput } from \"../../components/multi-line-input/MultiLineInput\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useAdminClient, useFetch } from \"../../context/auth/AdminClient\";\nimport { convertFormValuesToObject, convertToFormValues } from \"../../util\";\nimport { useParams } from \"../../utils/useParams\";\nimport { toAuthorizationTab } from \"../routes/AuthenticationTab\";\nimport { ResourceDetailsParams, toResourceDetails } from \"../routes/Resource\";\nimport { ScopePicker } from \"./ScopePicker\";\n\nimport \"./resource-details.css\";\n\ntype SubmittedResource = Omit<\n  ResourceRepresentation,\n  \"attributes\" | \"scopes\"\n> & {\n  attributes: KeyValueType[];\n};\n\nexport default function ResourceDetails() {\n  const { t } = useTranslation(\"clients\");\n  const [client, setClient] = useState<ClientRepresentation>();\n  const [resource, setResource] = useState<ResourceRepresentation>();\n\n  const [permissions, setPermission] =\n    useState<ResourceServerRepresentation[]>();\n\n  const { adminClient } = useAdminClient();\n  const { addAlert, addError } = useAlerts();\n  const form = useForm<SubmittedResource>({\n    mode: \"onChange\",\n  });\n  const {\n    register,\n    formState: { errors },\n    control,\n    setValue,\n    handleSubmit,\n  } = form;\n\n  const { id, resourceId, realm } = useParams<ResourceDetailsParams>();\n  const navigate = useNavigate();\n\n  const setupForm = (resource: ResourceRepresentation = {}) => {\n    convertToFormValues(resource, setValue);\n  };\n\n  useFetch(\n    () =>\n      Promise.all([\n        adminClient.clients.findOne({ id }),\n        resourceId\n          ? adminClient.clients.getResource({ id, resourceId })\n          : Promise.resolve(undefined),\n        resourceId\n          ? adminClient.clients.listPermissionsByResource({ id, resourceId })\n          : Promise.resolve(undefined),\n      ]),\n    ([client, resource, permissions]) => {\n      if (!client) {\n        throw new Error(t(\"common:notFound\"));\n      }\n      setClient(client);\n      setPermission(permissions);\n      setResource(resource);\n      setupForm(resource);\n    },\n    []\n  );\n\n  const submit = async (submitted: SubmittedResource) => {\n    const resource = convertFormValuesToObject<\n      SubmittedResource,\n      ResourceRepresentation\n    >(submitted);\n\n    try {\n      if (resourceId) {\n        await adminClient.clients.updateResource({ id, resourceId }, resource);\n      } else {\n        const result = await adminClient.clients.createResource(\n          { id },\n          resource\n        );\n        navigate(toResourceDetails({ realm, id, resourceId: result._id! }));\n      }\n      addAlert(\n        t((resourceId ? \"update\" : \"create\") + \"ResourceSuccess\"),\n        AlertVariant.success\n      );\n    } catch (error) {\n      addError(\"clients:resourceSaveError\", error);\n    }\n  };\n\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: \"clients:deleteResource\",\n    children: (\n      <>\n        {t(\"deleteResourceConfirm\")}\n        {permissions?.length !== 0 && (\n          <Alert\n            variant=\"warning\"\n            isInline\n            isPlain\n            title={t(\"deleteResourceWarning\")}\n            className=\"pf-u-pt-lg\"\n          >\n            <p className=\"pf-u-pt-xs\">\n              {permissions?.map((permission) => (\n                <strong key={permission.id} className=\"pf-u-pr-md\">\n                  {permission.name}\n                </strong>\n              ))}\n            </p>\n          </Alert>\n        )}\n      </>\n    ),\n    continueButtonLabel: \"clients:confirm\",\n    onConfirm: async () => {\n      try {\n        await adminClient.clients.delResource({\n          id,\n          resourceId: resourceId!,\n        });\n        addAlert(t(\"resourceDeletedSuccess\"), AlertVariant.success);\n        navigate(toAuthorizationTab({ realm, clientId: id, tab: \"resources\" }));\n      } catch (error) {\n        addError(\"clients:resourceDeletedError\", error);\n      }\n    },\n  });\n\n  if (!client) {\n    return <KeycloakSpinner />;\n  }\n\n  return (\n    <>\n      <DeleteConfirm />\n      <ViewHeader\n        titleKey={resourceId ? resource?.name! : \"clients:createResource\"}\n        dropdownItems={\n          resourceId\n            ? [\n                <DropdownItem\n                  key=\"delete\"\n                  data-testid=\"delete-resource\"\n                  onClick={() => toggleDeleteDialog()}\n                >\n                  {t(\"common:delete\")}\n                </DropdownItem>,\n              ]\n            : undefined\n        }\n      />\n      <PageSection variant=\"light\">\n        <FormProvider {...form}>\n          <FormAccess\n            isHorizontal\n            role=\"view-clients\"\n            className=\"keycloak__resource-details__form\"\n            onSubmit={handleSubmit(submit)}\n          >\n            <FormGroup\n              label={t(\"owner\")}\n              fieldId=\"owner\"\n              labelIcon={\n                <HelpItem\n                  helpText={t(\"clients-help:owner\")}\n                  fieldLabelId=\"clients:owner\"\n                />\n              }\n            >\n              <KeycloakTextInput\n                id=\"owner\"\n                value={client.clientId}\n                isReadOnly\n              />\n            </FormGroup>\n            <FormGroup\n              label={t(\"common:name\")}\n              fieldId=\"name\"\n              labelIcon={\n                <HelpItem\n                  helpText={t(\"clients-help:resourceName\")}\n                  fieldLabelId=\"name\"\n                />\n              }\n              helperTextInvalid={t(\"common:required\")}\n              validated={\n                errors.name ? ValidatedOptions.error : ValidatedOptions.default\n              }\n              isRequired\n            >\n              <KeycloakTextInput\n                id=\"name\"\n                validated={\n                  errors.name\n                    ? ValidatedOptions.error\n                    : ValidatedOptions.default\n                }\n                {...register(\"name\", { required: true })}\n              />\n            </FormGroup>\n            <FormGroup\n              label={t(\"displayName\")}\n              fieldId=\"displayName\"\n              labelIcon={\n                <HelpItem\n                  helpText={t(\"clients-help:displayName\")}\n                  fieldLabelId=\"name\"\n                />\n              }\n            >\n              <KeycloakTextInput\n                id=\"displayName\"\n                {...register(\"displayName\")}\n              />\n            </FormGroup>\n            <FormGroup\n              label={t(\"type\")}\n              fieldId=\"type\"\n              labelIcon={\n                <HelpItem\n                  helpText={t(\"clients-help:type\")}\n                  fieldLabelId=\"type\"\n                />\n              }\n            >\n              <KeycloakTextInput id=\"type\" {...register(\"type\")} />\n            </FormGroup>\n            <FormGroup\n              label={t(\"uris\")}\n              fieldId=\"uris\"\n              labelIcon={\n                <HelpItem\n                  helpText={t(\"clients-help:uris\")}\n                  fieldLabelId=\"clients:uris\"\n                />\n              }\n            >\n              <MultiLineInput\n                name=\"uris\"\n                type=\"url\"\n                aria-label={t(\"uris\")}\n                addButtonLabel=\"clients:addUri\"\n              />\n            </FormGroup>\n            <ScopePicker clientId={id} />\n            <FormGroup\n              label={t(\"iconUri\")}\n              fieldId=\"iconUri\"\n              labelIcon={\n                <HelpItem\n                  helpText={t(\"clients-help:iconUri\")}\n                  fieldLabelId=\"clients:iconUri\"\n                />\n              }\n            >\n              <KeycloakTextInput\n                id=\"iconUri\"\n                type=\"url\"\n                {...register(\"icon_uri\")}\n              />\n            </FormGroup>\n            <FormGroup\n              hasNoPaddingTop\n              label={t(\"ownerManagedAccess\")}\n              labelIcon={\n                <HelpItem\n                  helpText={t(\"clients-help:ownerManagedAccess\")}\n                  fieldLabelId=\"clients:ownerManagedAccess\"\n                />\n              }\n              fieldId=\"ownerManagedAccess\"\n            >\n              <Controller\n                name=\"ownerManagedAccess\"\n                control={control}\n                defaultValue={false}\n                render={({ field }) => (\n                  <Switch\n                    id=\"ownerManagedAccess\"\n                    label={t(\"common:on\")}\n                    labelOff={t(\"common:off\")}\n                    isChecked={field.value}\n                    onChange={field.onChange}\n                    aria-label={t(\"ownerManagedAccess\")}\n                  />\n                )}\n              />\n            </FormGroup>\n\n            <FormGroup\n              hasNoPaddingTop\n              label={t(\"resourceAttribute\")}\n              labelIcon={\n                <HelpItem\n                  helpText={t(\"clients-help:resourceAttribute\")}\n                  fieldLabelId=\"clients:resourceAttribute\"\n                />\n              }\n              fieldId=\"resourceAttribute\"\n            >\n              <KeyValueInput name=\"attributes\" />\n            </FormGroup>\n            <ActionGroup>\n              <div className=\"pf-u-mt-md\">\n                <Button\n                  variant={ButtonVariant.primary}\n                  type=\"submit\"\n                  data-testid=\"save\"\n                >\n                  {t(\"common:save\")}\n                </Button>\n\n                <Button\n                  variant=\"link\"\n                  data-testid=\"cancel\"\n                  component={(props) => (\n                    <Link\n                      {...props}\n                      to={toAuthorizationTab({\n                        realm,\n                        clientId: id,\n                        tab: \"resources\",\n                      })}\n                    ></Link>\n                  )}\n                >\n                  {t(\"common:cancel\")}\n                </Button>\n              </div>\n            </ActionGroup>\n          </FormAccess>\n        </FormProvider>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["ScopePicker","clientId","t","useTranslation","control","useFormContext","open","setOpen","useState","scopes","setScopes","search","setSearch","adminClient","useAdminClient","useFetch","params","renderScopes","option","jsx","SelectOption","FormGroup","HelpItem","Controller","field","Select","SelectVariant","o","_","value","selectedValue","changedValue","item","event","ResourceDetails","client","setClient","resource","setResource","permissions","setPermission","addAlert","addError","useAlerts","form","useForm","register","errors","setValue","handleSubmit","id","resourceId","realm","useParams","navigate","useNavigate","setupForm","convertToFormValues","submit","submitted","convertFormValuesToObject","result","toResourceDetails","AlertVariant","error","toggleDeleteDialog","DeleteConfirm","useConfirmDialog","jsxs","Fragment","Alert","permission","toAuthorizationTab","ViewHeader","DropdownItem","PageSection","FormProvider","FormAccess","KeycloakTextInput","ValidatedOptions","MultiLineInput","Switch","KeyValueInput","ActionGroup","Button","ButtonVariant","props","Link","KeycloakSpinner"],"mappings":"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"}