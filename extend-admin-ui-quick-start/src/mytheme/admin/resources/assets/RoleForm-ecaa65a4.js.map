{"version":3,"file":"RoleForm-ecaa65a4.js","sources":["../../src/components/role-form/RoleForm.tsx"],"sourcesContent":["import {\n  ActionGroup,\n  Button,\n  FormGroup,\n  PageSection,\n  ValidatedOptions,\n} from \"@patternfly/react-core\";\nimport { SubmitHandler, UseFormReturn, useWatch } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, To } from \"react-router-dom\";\n\nimport { FormAccess } from \"../form-access/FormAccess\";\nimport { AttributeForm } from \"../key-value-form/AttributeForm\";\nimport { KeycloakTextArea } from \"../keycloak-text-area/KeycloakTextArea\";\nimport { KeycloakTextInput } from \"../keycloak-text-input/KeycloakTextInput\";\nimport { ViewHeader } from \"../view-header/ViewHeader\";\n\nexport type RoleFormProps = {\n  form: UseFormReturn<AttributeForm>;\n  onSubmit: SubmitHandler<AttributeForm>;\n  cancelLink: To;\n  role: \"manage-realm\" | \"manage-clients\";\n  editMode: boolean;\n};\n\nexport const RoleForm = ({\n  form: {\n    register,\n    control,\n    handleSubmit,\n    formState: { errors },\n  },\n  onSubmit,\n  cancelLink,\n  role,\n  editMode,\n}: RoleFormProps) => {\n  const { t } = useTranslation(\"roles\");\n\n  const roleName = useWatch({\n    control,\n    defaultValue: undefined,\n    name: \"name\",\n  });\n\n  return (\n    <>\n      {!editMode && <ViewHeader titleKey={t(\"createRole\")} />}\n      <PageSection variant=\"light\">\n        <FormAccess\n          isHorizontal\n          onSubmit={handleSubmit(onSubmit)}\n          role={role}\n          className=\"pf-u-mt-lg\"\n        >\n          <FormGroup\n            label={t(\"roleName\")}\n            fieldId=\"kc-name\"\n            validated={\n              errors.name ? ValidatedOptions.error : ValidatedOptions.default\n            }\n            helperTextInvalid={t(\"common:required\")}\n            isRequired={!editMode}\n          >\n            <KeycloakTextInput\n              id=\"kc-name\"\n              isReadOnly={editMode}\n              {...register(\"name\", {\n                required: !editMode,\n                validate: (value) => {\n                  if (!value?.trim()) {\n                    return t(\"common:required\").toString();\n                  }\n                },\n              })}\n            />\n          </FormGroup>\n          <FormGroup\n            label={t(\"common:description\")}\n            fieldId=\"kc-description\"\n            validated={\n              errors.description\n                ? ValidatedOptions.error\n                : ValidatedOptions.default\n            }\n            helperTextInvalid={errors.description?.message}\n          >\n            <KeycloakTextArea\n              id=\"kc-description\"\n              validated={\n                errors.description\n                  ? ValidatedOptions.error\n                  : ValidatedOptions.default\n              }\n              isDisabled={roleName?.includes(\"default-roles\")}\n              {...register(\"description\", {\n                maxLength: {\n                  value: 255,\n                  message: t(\"common:maxLength\", { length: 255 }),\n                },\n              })}\n            />\n          </FormGroup>\n          <ActionGroup>\n            <Button data-testid=\"save\" type=\"submit\" variant=\"primary\">\n              {t(\"common:save\")}\n            </Button>\n            <Button\n              data-testid=\"cancel\"\n              variant=\"link\"\n              component={(props) => <Link {...props} to={cancelLink} />}\n            >\n              {t(\"common:cancel\")}\n            </Button>\n          </ActionGroup>\n        </FormAccess>\n      </PageSection>\n    </>\n  );\n};\n"],"names":["RoleForm","register","control","handleSubmit","errors","onSubmit","cancelLink","role","editMode","t","useTranslation","roleName","useWatch","jsxs","Fragment","jsx","ViewHeader","PageSection","FormAccess","FormGroup","ValidatedOptions","KeycloakTextInput","value","KeycloakTextArea","ActionGroup","Button","props","Link"],"mappings":"iUAyBO,MAAMA,EAAW,CAAC,CACvB,KAAM,CACJ,SAAAC,EACA,QAAAC,EACA,aAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,CACtB,EACA,SAAAC,EACA,WAAAC,EACA,KAAAC,EACA,SAAAC,CACF,IAAqB,CACnB,KAAM,CAAE,EAAAC,CAAA,EAAMC,EAAe,OAAO,EAE9BC,EAAWC,EAAS,CACxB,QAAAV,EACA,aAAc,OACd,KAAM,MAAA,CACP,EAED,OAEKW,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAA,CAACN,GAAaO,EAAAA,IAAAC,EAAA,CAAW,SAAUP,EAAE,YAAY,EAAG,EACrDM,EAAAA,IAACE,EAAY,CAAA,QAAQ,QACnB,SAAAJ,EAAA,KAACK,EAAA,CACC,aAAY,GACZ,SAAUf,EAAaE,CAAQ,EAC/B,KAAAE,EACA,UAAU,aAEV,SAAA,CAAAQ,EAAA,IAACI,EAAA,CACC,MAAOV,EAAE,UAAU,EACnB,QAAQ,UACR,UACEL,EAAO,KAAOgB,EAAiB,MAAQA,EAAiB,QAE1D,kBAAmBX,EAAE,iBAAiB,EACtC,WAAY,CAACD,EAEb,SAAAO,EAAA,IAACM,EAAA,CACC,GAAG,UACH,WAAYb,EACX,GAAGP,EAAS,OAAQ,CACnB,SAAU,CAACO,EACX,SAAWc,GAAU,CACf,GAAA,CAACA,GAAO,OACH,OAAAb,EAAE,iBAAiB,EAAE,UAEhC,CAAA,CACD,CAAA,CACH,CAAA,CACF,EACAM,EAAA,IAACI,EAAA,CACC,MAAOV,EAAE,oBAAoB,EAC7B,QAAQ,iBACR,UACEL,EAAO,YACHgB,EAAiB,MACjBA,EAAiB,QAEvB,kBAAmBhB,EAAO,aAAa,QAEvC,SAAAW,EAAA,IAACQ,EAAA,CACC,GAAG,iBACH,UACEnB,EAAO,YACHgB,EAAiB,MACjBA,EAAiB,QAEvB,WAAYT,GAAU,SAAS,eAAe,EAC7C,GAAGV,EAAS,cAAe,CAC1B,UAAW,CACT,MAAO,IACP,QAASQ,EAAE,mBAAoB,CAAE,OAAQ,IAAK,CAChD,CAAA,CACD,CAAA,CACH,CAAA,CACF,SACCe,EACC,CAAA,SAAA,CAACT,EAAAA,IAAAU,EAAA,CAAO,cAAY,OAAO,KAAK,SAAS,QAAQ,UAC9C,SAAEhB,EAAA,aAAa,CAClB,CAAA,EACAM,EAAA,IAACU,EAAA,CACC,cAAY,SACZ,QAAQ,OACR,UAAYC,GAAUX,MAACY,GAAM,GAAGD,EAAO,GAAIpB,EAAY,EAEtD,WAAE,eAAe,CAAA,CACpB,CAAA,EACF,CAAA,CAAA,CAAA,EAEJ,CACF,CAAA,CAAA,CAEJ"}