import{u as h,b as F,j as r,P as K,cV as V,d as E,e as R,R as S,cW as p,f as w,n as O,F as l,G as u,V as v,C as q,aw as G,g as k,B as f,A as x}from"./index-a3421f29.js";import{D}from"./DynamicComponents-72877b30.js";import{F as N}from"./FormAccess-1cceaef6.js";import{K as B}from"./KeycloakTextInput-e7f6e917.js";import{V as H}from"./ViewHeader-832ec56e.js";import{u as j}from"./useParams-5abeab7d.js";import{A as L}from"./Form-518a2cf2.js";import"./ClientSelect-3f0fc581.js";import"./Select-0f56a9cc.js";import"./check-fc57dbe1.js";import"./star-icon-6a7e7d25.js";import"./FileUpload-ca37c1a6.js";import"./CodeEditor-2fb93648.js";import"./copy-icon-a4fe01af.js";import"./EmptyStateBody-7b4fcee1.js";import"./EmptyStateSecondaryActions-08edafb5.js";import"./GroupPickerDialog-caf8c38d.js";import"./PaginatingTableToolbar-08ca9efb.js";import"./plus-circle-icon-cb854796.js";import"./TableToolbar-ee0c86ef.js";import"./ToolbarContent-7b435752.js";import"./DataListItemRow-75e02946.js";import"./data-list-7d55714c.js";import"./grip-vertical-icon-cbeff50f.js";import"./Modal-21c37af7.js";import"./ActionListItem-ab1a4322.js";import"./FlexItem-65b5f999.js";import"./minus-circle-icon-6f9a971c.js";import"./MultiLineInput-14187d1c.js";import"./PasswordInput-85f9399f.js";import"./useToggle-a9cb2c55.js";import"./AddRoleMappingModal-abb19beb.js";import"./KeycloakDataTable-10a62d94.js";import"./Td-6d4ab209.js";import"./Checkbox-d00621d8.js";import"./useLocaleSort-3efc7c31.js";import"./resource-08ae7dbc.js";import"./joinPath-55fd24bc.js";import"./filter-icon-9d72dc58.js";import"./ConfirmDialog-09ff7a12.js";import"./KeycloakTextArea-1b518857.js";import"./GridItem-d34dae2e.js";import"./Text-564bf299.js";const Y=({providerType:i,onClose:o})=>{const{t}=h("realm-settings"),{id:s}=j(),{adminClient:a}=E(),{addAlert:d,addError:I}=R(),g=S().componentTypes?.[p]??[],c=w({mode:"onChange"}),{register:y,control:b,handleSubmit:P,formState:{errors:T},reset:A}=c,C=async e=>{e.config&&Object.entries(e.config).forEach(([n,m])=>e.config[n]=Array.isArray(m)?m:[m]);try{s?(await a.components.update({id:s},{...e,providerType:p}),d(t("saveProviderSuccess"),x.success)):(await a.components.create({...e,providerId:i,providerType:p}),d(t("saveProviderSuccess"),x.success),o?.())}catch(n){I("realm-settings:saveProviderError",n)}};return O(async()=>{if(s)return await a.components.findOne({id:s})},e=>{e&&A({...e})},[]),r.jsxs(N,{isHorizontal:!0,role:"manage-realm",onSubmit:P(C),children:[s&&r.jsx(l,{label:t("providerId"),labelIcon:r.jsx(u,{helpText:t("client-scopes-help:mapperName"),fieldLabelId:"providerId"}),fieldId:"providerId",isRequired:!0,children:r.jsx(B,{id:"providerId","data-testid":"providerId-input",isReadOnly:!0,...y("id")})}),r.jsx(l,{label:t("common:name"),labelIcon:r.jsx(u,{helpText:t("client-scopes-help:mapperName"),fieldLabelId:"name"}),fieldId:"name",isRequired:!0,validated:T.name?v.error:v.default,helperTextInvalid:t("common:required"),children:r.jsx(q,{name:"name",control:b,rules:{required:!0},defaultValue:i,render:({field:e})=>r.jsx(G,{id:"name",value:e.value,onChange:e.onChange,"data-testid":"name-input"})})}),r.jsx(k,{...c,children:r.jsx(D,{properties:g.find(e=>e.id===i)?.properties||[]})}),r.jsxs(L,{children:[r.jsx(f,{"data-testid":"add-provider-button",variant:"primary",type:"submit",children:t("common:save")}),r.jsx(f,{onClick:()=>o?.(),variant:"link",children:t("common:cancel")})]})]})};function Or(){const{t:i}=h("realm-settings"),o=j(),t=F();return r.jsxs(r.Fragment,{children:[r.jsx(H,{titleKey:i("editProvider"),subKey:o.providerType}),r.jsx(K,{variant:"light",children:r.jsx(Y,{...o,onClose:()=>t(V({realm:o.realm,tab:"providers"}))})})]})}export{Y as KeyProviderForm,Or as default};
//# sourceMappingURL=KeyProviderForm-657f5169.js.map
