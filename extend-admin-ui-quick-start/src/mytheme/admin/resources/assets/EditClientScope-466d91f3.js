import{u as K,b as O,c as B,d as L,e as N,W as U,r as y,n as H,k as W,A as l,j as t,X,w as _,P as S,a3 as j,a4 as q,a5 as z,s as G}from"./index-a3421f29.js";import{c as J,C,A as Q}from"./ClientScopeTypes-b557e5db.js";import{u as Y}from"./ConfirmDialog-09ff7a12.js";import{R as Z}from"./AddRoleMappingModal-abb19beb.js";import{R as $,u as ee}from"./RoutableTabs-7f56b0c5.js";import{V as te}from"./ViewHeader-832ec56e.js";import{u as oe}from"./useParams-5abeab7d.js";import{M as se}from"./MapperList-9e36e770.js";import{S as ae}from"./ScopeForm-a772d0f4.js";import{a as f,b as g}from"./Tabs-5beaba80.js";import"./Select-0f56a9cc.js";import"./check-fc57dbe1.js";import"./star-icon-6a7e7d25.js";import"./Modal-21c37af7.js";import"./KeycloakDataTable-10a62d94.js";import"./PaginatingTableToolbar-08ca9efb.js";import"./plus-circle-icon-cb854796.js";import"./EmptyStateBody-7b4fcee1.js";import"./EmptyStateSecondaryActions-08edafb5.js";import"./TableToolbar-ee0c86ef.js";import"./ToolbarContent-7b435752.js";import"./Form-518a2cf2.js";import"./Td-6d4ab209.js";import"./grip-vertical-icon-cbeff50f.js";import"./Checkbox-d00621d8.js";import"./useLocaleSort-3efc7c31.js";import"./resource-08ae7dbc.js";import"./joinPath-55fd24bc.js";import"./filter-icon-9d72dc58.js";import"./Text-564bf299.js";import"./DataListItemRow-75e02946.js";import"./data-list-7d55714c.js";import"./utils-49fe564a.js";import"./FormAccess-1cceaef6.js";import"./copy-icon-a4fe01af.js";import"./GridItem-d34dae2e.js";import"./KeycloakTextArea-1b518857.js";import"./KeycloakTextInput-e7f6e917.js";import"./plus-icon-2a767bad.js";import"./MenuList-e3786b59.js";function ze(){const{t:s}=K("client-scopes"),b=O(),{realm:m}=B(),{adminClient:n}=L(),{id:r}=oe(),{addAlert:c,addError:p}=N(),{enabled:w}=U(),[a,T]=y.useState(),[h,M]=y.useState(0),x=()=>M(h+1);H(async()=>{const e=await n.clientScopes.findOne({id:r});if(!e)throw new Error(s("common:notFound"));return{...e,type:await v(e)}},e=>{T(e)},[h,r]);async function v(e){return(await n.clientScopes.listDefaultClientScopes()).find(u=>u.name===e.name)?C.default:(await n.clientScopes.listDefaultOptionalClientScopes()).find(u=>u.name===e.name)?C.optional:Q.none}const d=e=>ee(z({realm:m,id:r,tab:e})),A=d("settings"),D=d("mappers"),E=d("scope"),R=async e=>{const o=G({...e,name:e.name?.trim().replace(/ /g,"_")});try{await n.clientScopes.update({id:r},o),await J(n,{...o,id:r},o.type),c(s("updateSuccess"),l.success)}catch(i){p("client-scopes:updateError",i)}},[F,I]=Y({titleKey:s("deleteClientScope",{count:1,name:a?.name}),messageKey:"client-scopes:deleteConfirm",continueButtonLabel:"common:delete",continueButtonVariant:W.danger,onConfirm:async()=>{try{await n.clientScopes.del({id:r}),c(s("deletedSuccess"),l.success)}catch(e){p("client-scopes:deleteError",e)}}}),P=async e=>{try{const o=e.filter(i=>i.client===void 0).map(i=>i.role).flat();await n.clientScopes.addRealmScopeMappings({id:r},o),await Promise.all(e.filter(i=>i.client!==void 0).map(i=>n.clientScopes.addClientScopeMappings({id:r,client:i.client.id},[i.role]))),c(s("roleMappingUpdatedSuccess"),l.success)}catch(o){p("client-scopes:roleMappingUpdatedError",o)}},V=async e=>{if(Array.isArray(e))try{await n.clientScopes.addMultipleProtocolMappers({id:a.id},e),x(),c(s("common:mappingCreatedSuccess"),l.success)}catch(o){p("common:mappingCreatedError",o)}else{const o=e;b(j({realm:m,id:a.id,mapperId:o.id}))}},k=async e=>{try{await n.clientScopes.delProtocolMapper({id:a.id,mapperId:e.id}),c(s("common:mappingDeletedSuccess"),l.success),x()}catch(o){p("common:mappingDeletedError",o)}return!0};return a?t.jsxs(t.Fragment,{children:[t.jsx(I,{}),t.jsx(te,{titleKey:a.name,dropdownItems:[t.jsx(_,{onClick:F,children:s("common:delete")},"delete")],badges:[{text:a.protocol}],divider:!1}),t.jsx(S,{variant:"light",className:"pf-u-p-0",children:t.jsxs($,{isBox:!0,children:[t.jsx(f,{id:"settings","data-testid":"settings",title:t.jsx(g,{children:s("common:settings")}),...A,children:t.jsx(S,{variant:"light",children:t.jsx(ae,{save:R,clientScope:a})})}),t.jsx(f,{id:"mappers","data-testid":"mappers",title:t.jsx(g,{children:s("common:mappers")}),...D,children:t.jsx(se,{model:a,onAdd:V,onDelete:k,detailLink:e=>j({realm:m,id:a.id,mapperId:e})})}),t.jsxs(f,{id:"scope","data-testid":"scopeTab",title:t.jsx(g,{children:s("scope")}),...E,children:[w&&t.jsx(S,{children:t.jsx(q,{variant:"info",isInline:!0,title:s("client-scopes-help:rolesScope"),component:"h2"})}),t.jsx(Z,{id:a.id,name:a.name,type:"clientScopes",save:P})]})]})})]}):t.jsx(X,{})}export{ze as default};
//# sourceMappingURL=EditClientScope-466d91f3.js.map
