{"version":3,"file":"CreateInitialAccessToken-646c1b19.js","sources":["../../src/clients/initial-access/AccessTokenDialog.tsx","../../src/clients/initial-access/CreateInitialAccessToken.tsx"],"sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport {\n  Alert,\n  AlertVariant,\n  ClipboardCopy,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n} from \"@patternfly/react-core\";\n\ntype AccessTokenDialogProps = {\n  token: string;\n  toggleDialog: () => void;\n};\n\nexport const AccessTokenDialog = ({\n  token,\n  toggleDialog,\n}: AccessTokenDialogProps) => {\n  const { t } = useTranslation(\"clients\");\n  return (\n    <Modal\n      title={t(\"initialAccessTokenDetails\")}\n      isOpen={true}\n      onClose={toggleDialog}\n      variant={ModalVariant.medium}\n    >\n      <Alert\n        title={t(\"copyInitialAccessToken\")}\n        titleHeadingLevel=\"h2\"\n        isInline\n        variant={AlertVariant.warning}\n      />\n      <Form className=\"pf-u-mt-md\">\n        <FormGroup label={t(\"initialAccessToken\")} fieldId=\"initialAccessToken\">\n          <ClipboardCopy id=\"initialAccessToken\" isReadOnly>\n            {token}\n          </ClipboardCopy>\n        </FormGroup>\n      </Form>\n    </Modal>\n  );\n};\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  FormGroup,\n  NumberInput,\n  PageSection,\n} from \"@patternfly/react-core\";\n\nimport type ClientInitialAccessPresentation from \"@keycloak/keycloak-admin-client/lib/defs/clientInitialAccessPresentation\";\nimport { FormAccess } from \"../../components/form-access/FormAccess\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { HelpItem } from \"ui-shared\";\nimport { TimeSelector } from \"../../components/time-selector/TimeSelector\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { useAdminClient } from \"../../context/auth/AdminClient\";\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { AccessTokenDialog } from \"./AccessTokenDialog\";\nimport { toClients } from \"../routes/Clients\";\n\nexport default function CreateInitialAccessToken() {\n  const { t } = useTranslation(\"clients\");\n  const {\n    handleSubmit,\n    control,\n    formState: { isValid, errors },\n  } = useForm({ mode: \"onChange\" });\n\n  const { adminClient } = useAdminClient();\n  const { realm } = useRealm();\n  const { addAlert, addError } = useAlerts();\n\n  const navigate = useNavigate();\n  const [token, setToken] = useState(\"\");\n\n  const save = async (clientToken: ClientInitialAccessPresentation) => {\n    try {\n      const access = await adminClient.realms.createClientsInitialAccess(\n        { realm },\n        clientToken\n      );\n      setToken(access.token!);\n    } catch (error) {\n      addError(\"clients:tokenSaveError\", error);\n    }\n  };\n\n  return (\n    <>\n      {token && (\n        <AccessTokenDialog\n          token={token}\n          toggleDialog={() => {\n            setToken(\"\");\n            addAlert(t(\"tokenSaveSuccess\"), AlertVariant.success);\n            navigate(toClients({ realm, tab: \"initial-access-token\" }));\n          }}\n        />\n      )}\n      <ViewHeader\n        titleKey=\"clients:createToken\"\n        subKey=\"clients-help:createToken\"\n      />\n      <PageSection variant=\"light\">\n        <FormAccess\n          isHorizontal\n          role=\"create-client\"\n          onSubmit={handleSubmit(save)}\n        >\n          <FormGroup\n            label={t(\"expiration\")}\n            fieldId=\"expiration\"\n            labelIcon={\n              <HelpItem\n                helpText={t(\"clients-help:expiration\")}\n                fieldLabelId=\"clients:expiration\"\n              />\n            }\n            helperTextInvalid={t(\"expirationValueNotValid\")}\n            validated={errors.expiration ? \"error\" : \"default\"}\n          >\n            <Controller\n              name=\"expiration\"\n              defaultValue={86400}\n              control={control}\n              rules={{ min: 1 }}\n              render={({ field }) => (\n                <TimeSelector\n                  data-testid=\"expiration\"\n                  value={field.value}\n                  onChange={field.onChange}\n                  min={1}\n                  validated={errors.expiration ? \"error\" : \"default\"}\n                />\n              )}\n            />\n          </FormGroup>\n          <FormGroup\n            label={t(\"count\")}\n            fieldId=\"count\"\n            labelIcon={\n              <HelpItem\n                helpText={t(\"clients-help:count\")}\n                fieldLabelId=\"clients:count\"\n              />\n            }\n          >\n            <Controller\n              name=\"count\"\n              defaultValue={1}\n              control={control}\n              render={({ field }) => (\n                <NumberInput\n                  data-testid=\"count\"\n                  inputName=\"count\"\n                  inputAriaLabel={t(\"count\")}\n                  min={1}\n                  value={field.value}\n                  onPlus={() => field.onChange(field.value + 1)}\n                  onMinus={() => field.onChange(field.value - 1)}\n                  onChange={(event) => {\n                    const value = Number(\n                      (event.target as HTMLInputElement).value\n                    );\n                    field.onChange(value < 1 ? 1 : value);\n                  }}\n                />\n              )}\n            />\n          </FormGroup>\n          <ActionGroup>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              data-testid=\"save\"\n              isDisabled={!isValid}\n            >\n              {t(\"common:save\")}\n            </Button>\n            <Button\n              data-testid=\"cancel\"\n              variant=\"link\"\n              component={(props) => (\n                <Link\n                  {...props}\n                  to={toClients({ realm, tab: \"initial-access-token\" })}\n                />\n              )}\n            >\n              {t(\"common:cancel\")}\n            </Button>\n          </ActionGroup>\n        </FormAccess>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["AccessTokenDialog","token","toggleDialog","t","useTranslation","jsxs","Modal","ModalVariant","jsx","Alert","AlertVariant","Form","FormGroup","ClipboardCopy","CreateInitialAccessToken","handleSubmit","control","isValid","errors","useForm","adminClient","useAdminClient","realm","useRealm","addAlert","addError","useAlerts","navigate","useNavigate","setToken","useState","save","clientToken","access","error","Fragment","toClients","ViewHeader","PageSection","FormAccess","HelpItem","Controller","field","TimeSelector","NumberInput","event","value","ActionGroup","Button","props","Link"],"mappings":"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"}