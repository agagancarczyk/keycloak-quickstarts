{"version":3,"file":"AddIdentityProvider-84c62c55.js","sources":["../../src/identity-providers/add/AddIdentityProvider.tsx"],"sourcesContent":["import type IdentityProviderRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/identityProviderRepresentation\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { FormAccess } from \"../../components/form-access/FormAccess\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useAdminClient } from \"../../context/auth/AdminClient\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { toUpperCase } from \"../../util\";\nimport { useParams } from \"../../utils/useParams\";\nimport { ExtendedFieldsForm } from \"../component/ExtendedFieldsForm\";\nimport { toIdentityProvider } from \"../routes/IdentityProvider\";\nimport type { IdentityProviderCreateParams } from \"../routes/IdentityProviderCreate\";\nimport { toIdentityProviders } from \"../routes/IdentityProviders\";\nimport { GeneralSettings } from \"./GeneralSettings\";\n\nexport default function AddIdentityProvider() {\n  const { t } = useTranslation(\"identity-providers\");\n  const { providerId } = useParams<IdentityProviderCreateParams>();\n  const form = useForm<IdentityProviderRepresentation>();\n  const {\n    handleSubmit,\n    formState: { isDirty },\n  } = form;\n\n  const { adminClient } = useAdminClient();\n  const { addAlert, addError } = useAlerts();\n  const navigate = useNavigate();\n  const { realm } = useRealm();\n\n  const onSubmit = async (provider: IdentityProviderRepresentation) => {\n    try {\n      await adminClient.identityProviders.create({\n        ...provider,\n        providerId,\n        alias: providerId,\n      });\n      addAlert(t(\"createSuccess\"), AlertVariant.success);\n      navigate(\n        toIdentityProvider({\n          realm,\n          providerId,\n          alias: providerId,\n          tab: \"settings\",\n        })\n      );\n    } catch (error) {\n      addError(\"identity-providers:createError\", error);\n    }\n  };\n\n  return (\n    <>\n      <ViewHeader\n        titleKey={t(\"addIdentityProvider\", {\n          provider: toUpperCase(providerId),\n        })}\n      />\n      <PageSection variant=\"light\">\n        <FormAccess\n          role=\"manage-identity-providers\"\n          isHorizontal\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <FormProvider {...form}>\n            <GeneralSettings id={providerId} />\n            <ExtendedFieldsForm providerId={providerId} />\n          </FormProvider>\n          <ActionGroup>\n            <Button\n              isDisabled={!isDirty}\n              variant=\"primary\"\n              type=\"submit\"\n              data-testid=\"createProvider\"\n            >\n              {t(\"common:add\")}\n            </Button>\n            <Button\n              variant=\"link\"\n              data-testid=\"cancel\"\n              component={(props) => (\n                <Link {...props} to={toIdentityProviders({ realm })} />\n              )}\n            >\n              {t(\"common:cancel\")}\n            </Button>\n          </ActionGroup>\n        </FormAccess>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["AddIdentityProvider","t","useTranslation","providerId","useParams","form","useForm","handleSubmit","isDirty","adminClient","useAdminClient","addAlert","addError","useAlerts","navigate","useNavigate","realm","useRealm","onSubmit","provider","AlertVariant","toIdentityProvider","error","jsxs","Fragment","jsx","ViewHeader","toUpperCase","PageSection","FormAccess","FormProvider","GeneralSettings","ExtendedFieldsForm","ActionGroup","Button","props","Link","toIdentityProviders"],"mappings":"soBAwBA,SAAwBA,GAAsB,CAC5C,KAAM,CAAE,EAAAC,CAAA,EAAMC,EAAe,oBAAoB,EAC3C,CAAE,WAAAC,GAAeC,IACjBC,EAAOC,IACP,CACJ,aAAAC,EACA,UAAW,CAAE,QAAAC,CAAQ,CACnB,EAAAH,EAEE,CAAE,YAAAI,GAAgBC,IAClB,CAAE,SAAAC,EAAU,SAAAC,CAAS,EAAIC,EAAU,EACnCC,EAAWC,IACX,CAAE,MAAAC,GAAUC,IAEZC,EAAW,MAAOC,GAA6C,CAC/D,GAAA,CACI,MAAAV,EAAY,kBAAkB,OAAO,CACzC,GAAGU,EACH,WAAAhB,EACA,MAAOA,CAAA,CACR,EACDQ,EAASV,EAAE,eAAe,EAAGmB,EAAa,OAAO,EACjDN,EACEO,EAAmB,CACjB,MAAAL,EACA,WAAAb,EACA,MAAOA,EACP,IAAK,UAAA,CACN,CAAA,QAEImB,GACPV,EAAS,iCAAkCU,CAAK,CAClD,CAAA,EAGF,OAEIC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAC,EAAA,IAACC,EAAA,CACC,SAAUzB,EAAE,sBAAuB,CACjC,SAAU0B,EAAYxB,CAAU,CAAA,CACjC,CAAA,CACH,EACAsB,EAAAA,IAACG,EAAY,CAAA,QAAQ,QACnB,SAAAL,EAAA,KAACM,EAAA,CACC,KAAK,4BACL,aAAY,GACZ,SAAUtB,EAAaW,CAAQ,EAE/B,SAAA,CAACK,EAAAA,KAAAO,EAAA,CAAc,GAAGzB,EAChB,SAAA,CAACoB,EAAAA,IAAAM,EAAA,CAAgB,GAAI5B,CAAY,CAAA,EACjCsB,MAACO,GAAmB,WAAA7B,EAAwB,CAAA,EAC9C,SACC8B,EACC,CAAA,SAAA,CAAAR,EAAA,IAACS,EAAA,CACC,WAAY,CAAC1B,EACb,QAAQ,UACR,KAAK,SACL,cAAY,iBAEX,WAAE,YAAY,CAAA,CACjB,EACAiB,EAAA,IAACS,EAAA,CACC,QAAQ,OACR,cAAY,SACZ,UAAYC,GACVV,EAAA,IAACW,EAAM,CAAA,GAAGD,EAAO,GAAIE,EAAoB,CAAE,MAAArB,CAAM,CAAC,CAAG,CAAA,EAGtD,WAAE,eAAe,CAAA,CACpB,CAAA,EACF,CAAA,CAAA,CAAA,EAEJ,CACF,CAAA,CAAA,CAEJ"}