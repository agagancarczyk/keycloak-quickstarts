import{u as d,b as u,c as S,d as g,e as f,j as e,P as i,s as h,A as j,a5 as x}from"./index-a3421f29.js";import{c as v}from"./ClientScopeTypes-b557e5db.js";import{V as w}from"./ViewHeader-832ec56e.js";import{S as C}from"./ScopeForm-a772d0f4.js";import"./Select-0f56a9cc.js";import"./check-fc57dbe1.js";import"./star-icon-6a7e7d25.js";import"./Text-564bf299.js";import"./ToolbarContent-7b435752.js";import"./utils-49fe564a.js";import"./FormAccess-1cceaef6.js";import"./copy-icon-a4fe01af.js";import"./Form-518a2cf2.js";import"./GridItem-d34dae2e.js";import"./KeycloakTextArea-1b518857.js";import"./KeycloakTextInput-e7f6e917.js";function q(){const{t:o}=d("client-scopes"),n=u(),{realm:c}=S(),{adminClient:a}=g(),{addAlert:m,addError:p}=f(),l=async s=>{const r=h({...s,name:s.name?.trim().replace(/ /g,"_")});try{await a.clientScopes.create(r);const t=await a.clientScopes.findOneByName({name:r.name});if(!t)throw new Error(o("common:notFound"));await v(a,{...r,id:t.id},r.type),m(o("createSuccess",j.success)),n(x({realm:c,id:t.id,tab:"settings"}))}catch(t){p("client-scopes:createError",t)}};return e.jsxs(e.Fragment,{children:[e.jsx(w,{titleKey:"client-scopes:createClientScope"}),e.jsx(i,{variant:"light",className:"pf-u-p-0",children:e.jsx(i,{variant:"light",children:e.jsx(C,{save:l})})})]})}export{q as default};
//# sourceMappingURL=CreateClientScope-153848b9.js.map
