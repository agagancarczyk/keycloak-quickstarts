{"version":3,"file":"DedicatedScopes-d29b287d.js","sources":["../../src/clients/scopes/DecicatedScope.tsx","../../src/clients/scopes/DedicatedScopes.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  AlertVariant,\n  Divider,\n  FormGroup,\n  PageSection,\n  Switch,\n} from \"@patternfly/react-core\";\n\nimport type ClientRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/clientRepresentation\";\nimport { FormAccess } from \"../../components/form-access/FormAccess\";\nimport { HelpItem } from \"ui-shared\";\nimport { useAdminClient } from \"../../context/auth/AdminClient\";\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { RoleMapping, Row } from \"../../components/role-mapping/RoleMapping\";\nimport type { RoleMappingPayload } from \"@keycloak/keycloak-admin-client/lib/defs/roleRepresentation\";\nimport { useAccess } from \"../../context/access/Access\";\n\ntype DedicatedScopeProps = {\n  client: ClientRepresentation;\n};\n\nexport const DedicatedScope = ({\n  client: initialClient,\n}: DedicatedScopeProps) => {\n  const { t } = useTranslation(\"clients\");\n  const { adminClient } = useAdminClient();\n  const { addAlert, addError } = useAlerts();\n\n  const [client, setClient] = useState<ClientRepresentation>(initialClient);\n\n  const { hasAccess } = useAccess();\n  const isManager = hasAccess(\"manage-clients\") || client.access?.manage;\n\n  const assignRoles = async (rows: Row[]) => {\n    try {\n      const realmRoles = rows\n        .filter((row) => row.client === undefined)\n        .map((row) => row.role as RoleMappingPayload)\n        .flat();\n      await Promise.all([\n        adminClient.clients.addRealmScopeMappings(\n          {\n            id: client.id!,\n          },\n          realmRoles\n        ),\n        ...rows\n          .filter((row) => row.client !== undefined)\n          .map((row) =>\n            adminClient.clients.addClientScopeMappings(\n              {\n                id: client.id!,\n                client: row.client!.id!,\n              },\n              [row.role as RoleMappingPayload]\n            )\n          ),\n      ]);\n\n      addAlert(t(\"clientScopeSuccess\"), AlertVariant.success);\n    } catch (error) {\n      addError(\"clients:clientScopeError\", error);\n    }\n  };\n\n  const update = async () => {\n    const newClient = { ...client, fullScopeAllowed: !client.fullScopeAllowed };\n    try {\n      await adminClient.clients.update({ id: client.id! }, newClient);\n      addAlert(t(\"clientScopeSuccess\"), AlertVariant.success);\n      setClient(newClient);\n    } catch (error) {\n      addError(\"clients:clientScopeError\", error);\n    }\n  };\n\n  return (\n    <PageSection>\n      <FormAccess\n        role=\"manage-clients\"\n        fineGrainedAccess={client.access?.manage}\n        isHorizontal\n      >\n        <FormGroup\n          hasNoPaddingTop\n          label={t(\"fullScopeAllowed\")}\n          labelIcon={\n            <HelpItem\n              helpText={t(\"clients-help:fullScopeAllowed\")}\n              fieldLabelId=\"clients:fullScopeAllowed\"\n            />\n          }\n          fieldId=\"fullScopeAllowed\"\n        >\n          <Switch\n            id=\"fullScopeAllowed\"\n            label={t(\"common:on\")}\n            labelOff={t(\"common:off\")}\n            isChecked={client.fullScopeAllowed}\n            onChange={update}\n            aria-label={t(\"fullScopeAllowed\")}\n          />\n        </FormGroup>\n      </FormAccess>\n      {!client.fullScopeAllowed && (\n        <>\n          <Divider />\n          <RoleMapping\n            name={client.clientId!}\n            id={client.id!}\n            type=\"clients\"\n            save={assignRoles}\n            isManager={isManager}\n          />\n        </>\n      )}\n    </PageSection>\n  );\n};\n","import type ClientRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/clientRepresentation\";\nimport type ProtocolMapperRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/protocolMapperRepresentation\";\nimport type { ProtocolMapperTypeRepresentation } from \"@keycloak/keycloak-admin-client/lib/defs/serverInfoRepesentation\";\nimport {\n  AlertVariant,\n  PageSection,\n  Tab,\n  TabTitleText,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { MapperList } from \"../../client-scopes/details/MapperList\";\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { KeycloakSpinner } from \"../../components/keycloak-spinner/KeycloakSpinner\";\nimport {\n  RoutableTabs,\n  useRoutableTab,\n} from \"../../components/routable-tabs/RoutableTabs\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useAdminClient, useFetch } from \"../../context/auth/AdminClient\";\nimport { useParams } from \"../../utils/useParams\";\nimport {\n  DedicatedScopeDetailsParams,\n  DedicatedScopeTab,\n  toDedicatedScope,\n} from \"../routes/DedicatedScopeDetails\";\nimport { toMapper } from \"../routes/Mapper\";\nimport { DedicatedScope } from \"./DecicatedScope\";\n\nexport default function DedicatedScopes() {\n  const { t } = useTranslation(\"clients\");\n  const navigate = useNavigate();\n  const { realm, clientId } = useParams<DedicatedScopeDetailsParams>();\n\n  const { adminClient } = useAdminClient();\n  const { addAlert, addError } = useAlerts();\n\n  const [client, setClient] = useState<ClientRepresentation>();\n\n  useFetch(() => adminClient.clients.findOne({ id: clientId }), setClient, []);\n\n  const useTab = (tab: DedicatedScopeTab) =>\n    useRoutableTab(toDedicatedScope({ realm, clientId, tab }));\n\n  const mappersTab = useTab(\"mappers\");\n  const scopeTab = useTab(\"scope\");\n\n  if (!client) {\n    return <KeycloakSpinner />;\n  }\n\n  const addMappers = async (\n    mappers: ProtocolMapperTypeRepresentation | ProtocolMapperRepresentation[]\n  ): Promise<void> => {\n    if (!Array.isArray(mappers)) {\n      const mapper = mappers as ProtocolMapperTypeRepresentation;\n      navigate(\n        toMapper({\n          realm,\n          id: client.id!,\n          mapperId: mapper.id!,\n        })\n      );\n    } else {\n      try {\n        await adminClient.clients.addMultipleProtocolMappers(\n          { id: client.id! },\n          mappers as ProtocolMapperRepresentation[]\n        );\n        setClient(await adminClient.clients.findOne({ id: client.id! }));\n        addAlert(t(\"common:mappingCreatedSuccess\"), AlertVariant.success);\n      } catch (error) {\n        addError(\"common:mappingCreatedError\", error);\n      }\n    }\n  };\n\n  const onDeleteMapper = async (mapper: ProtocolMapperRepresentation) => {\n    try {\n      await adminClient.clients.delProtocolMapper({\n        id: client.id!,\n        mapperId: mapper.id!,\n      });\n      setClient({\n        ...client,\n        protocolMappers: client.protocolMappers?.filter(\n          (m) => m.id !== mapper.id\n        ),\n      });\n      addAlert(t(\"common:mappingDeletedSuccess\"), AlertVariant.success);\n    } catch (error) {\n      addError(\"common:mappingDeletedError\", error);\n    }\n    return true;\n  };\n\n  return (\n    <>\n      <ViewHeader\n        titleKey={client.clientId!}\n        subKey=\"clients-help:dedicatedScopeExplain\"\n        divider={false}\n      />\n      <PageSection variant=\"light\" className=\"pf-u-p-0\">\n        <RoutableTabs\n          isBox\n          mountOnEnter\n          defaultLocation={toDedicatedScope({\n            realm,\n            clientId,\n            tab: \"mappers\",\n          })}\n        >\n          <Tab\n            title={<TabTitleText>{t(\"mappers\")}</TabTitleText>}\n            data-testid=\"mappersTab\"\n            {...mappersTab}\n          >\n            <MapperList\n              model={client}\n              onAdd={addMappers}\n              onDelete={onDeleteMapper}\n              detailLink={(mapperId) =>\n                toMapper({ realm, id: client.id!, mapperId })\n              }\n            />\n          </Tab>\n          <Tab\n            title={<TabTitleText>{t(\"scope\")}</TabTitleText>}\n            data-testid=\"scopeTab\"\n            {...scopeTab}\n          >\n            <DedicatedScope client={client} />\n          </Tab>\n        </RoutableTabs>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["DedicatedScope","initialClient","t","useTranslation","adminClient","useAdminClient","addAlert","addError","useAlerts","client","setClient","useState","hasAccess","useAccess","isManager","assignRoles","rows","realmRoles","row","AlertVariant","error","update","newClient","PageSection","jsx","FormAccess","FormGroup","HelpItem","Switch","jsxs","Fragment","Divider","RoleMapping","DedicatedScopes","navigate","useNavigate","realm","clientId","useParams","useFetch","useTab","tab","useRoutableTab","toDedicatedScope","mappersTab","scopeTab","KeycloakSpinner","addMappers","mappers","mapper","toMapper","onDeleteMapper","m","ViewHeader","RoutableTabs","Tab","TabTitleText","MapperList","mapperId"],"mappings":"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"}