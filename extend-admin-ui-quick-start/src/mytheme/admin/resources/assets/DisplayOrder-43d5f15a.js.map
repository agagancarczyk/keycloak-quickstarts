{"version":3,"file":"DisplayOrder-43d5f15a.js","sources":["../../src/identity-providers/component/RedirectUrl.tsx","../../src/identity-providers/component/DisplayOrder.tsx"],"sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport { ClipboardCopy, FormGroup } from \"@patternfly/react-core\";\n\nimport { HelpItem } from \"ui-shared\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { useAdminClient } from \"../../context/auth/AdminClient\";\nimport { addTrailingSlash } from \"../../util\";\n\nexport const RedirectUrl = ({ id }: { id: string }) => {\n  const { t } = useTranslation(\"identity-providers\");\n\n  const { adminClient } = useAdminClient();\n  const { realm } = useRealm();\n  const callbackUrl = `${addTrailingSlash(\n    adminClient.baseUrl\n  )}realms/${realm}/broker`;\n\n  return (\n    <FormGroup\n      label={t(\"redirectURI\")}\n      labelIcon={\n        <HelpItem\n          helpText={t(\"identity-providers-help:redirectURI\")}\n          fieldLabelId=\"identity-providers:redirectURI\"\n        />\n      }\n      fieldId=\"kc-redirect-uri\"\n    >\n      <ClipboardCopy\n        isReadOnly\n      >{`${callbackUrl}/${id}/endpoint`}</ClipboardCopy>\n    </FormGroup>\n  );\n};\n","import { FormGroup, TextInput } from \"@patternfly/react-core\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { HelpItem } from \"ui-shared\";\n\nexport const DisplayOrder = () => {\n  const { t } = useTranslation(\"identity-providers\");\n\n  const { control } = useFormContext();\n\n  return (\n    <FormGroup\n      label={t(\"displayOrder\")}\n      labelIcon={\n        <HelpItem\n          helpText={t(\"identity-providers-help:displayOrder\")}\n          fieldLabelId=\"identity-providers:displayOrder\"\n        />\n      }\n      fieldId=\"kc-display-order\"\n    >\n      <Controller\n        name=\"config.guiOrder\"\n        control={control}\n        defaultValue=\"\"\n        render={({ field }) => (\n          <TextInput\n            id=\"kc-display-order\"\n            type=\"number\"\n            value={field.value}\n            data-testid=\"displayOrder\"\n            min={0}\n            onChange={(value) => {\n              const num = Number(value);\n              field.onChange(value === \"\" ? value : num < 0 ? 0 : num);\n            }}\n          />\n        )}\n      />\n    </FormGroup>\n  );\n};\n"],"names":["RedirectUrl","id","t","useTranslation","adminClient","useAdminClient","realm","useRealm","callbackUrl","addTrailingSlash","jsx","FormGroup","HelpItem","ClipboardCopy","DisplayOrder","control","useFormContext","Controller","field","TextInput","value","num"],"mappings":"iJAQO,MAAMA,EAAc,CAAC,CAAE,GAAAC,KAAyB,CACrD,KAAM,CAAE,EAAAC,CAAA,EAAMC,EAAe,oBAAoB,EAE3C,CAAE,YAAAC,GAAgBC,IAClB,CAAE,MAAAC,GAAUC,IACZC,EAAc,GAAGC,EACrBL,EAAY,OAAA,WACHE,WAGT,OAAAI,EAAA,IAACC,EAAA,CACC,MAAOT,EAAE,aAAa,EACtB,UACEQ,EAAA,IAACE,EAAA,CACC,SAAUV,EAAE,qCAAqC,EACjD,aAAa,gCAAA,CACf,EAEF,QAAQ,kBAER,SAAAQ,EAAA,IAACG,EAAA,CACC,WAAU,GACV,YAAGL,KAAeP,YAAA,CAAc,CAAA,CAAA,CAGxC,EC3Baa,EAAe,IAAM,CAChC,KAAM,CAAE,EAAAZ,CAAA,EAAMC,EAAe,oBAAoB,EAE3C,CAAE,QAAAY,GAAYC,IAGlB,OAAAN,EAAA,IAACC,EAAA,CACC,MAAOT,EAAE,cAAc,EACvB,UACEQ,EAAA,IAACE,EAAA,CACC,SAAUV,EAAE,sCAAsC,EAClD,aAAa,iCAAA,CACf,EAEF,QAAQ,mBAER,SAAAQ,EAAA,IAACO,EAAA,CACC,KAAK,kBACL,QAAAF,EACA,aAAa,GACb,OAAQ,CAAC,CAAE,MAAAG,CAAA,IACTR,EAAA,IAACS,EAAA,CACC,GAAG,mBACH,KAAK,SACL,MAAOD,EAAM,MACb,cAAY,eACZ,IAAK,EACL,SAAWE,GAAU,CACb,MAAAC,EAAM,OAAOD,CAAK,EACxBF,EAAM,SAASE,IAAU,GAAKA,EAAQC,EAAM,EAAI,EAAIA,CAAG,CACzD,CAAA,CACF,CAAA,CAEJ,CAAA,CAAA,CAGN"}