{"version":3,"file":"CreateUser-965d895d.js","sources":["../../src/user/CreateUser.tsx"],"sourcesContent":["import type GroupRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/groupRepresentation\";\nimport type UserRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/userRepresentation\";\nimport { AlertVariant, PageSection } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { useAlerts } from \"../components/alert/Alerts\";\nimport { ViewHeader } from \"../components/view-header/ViewHeader\";\nimport { useAdminClient } from \"../context/auth/AdminClient\";\nimport { useRealm } from \"../context/realm-context/RealmContext\";\nimport { UserProfileProvider } from \"../realm-settings/user-profile/UserProfileContext\";\nimport { toUser } from \"./routes/User\";\nimport { UserForm } from \"./UserForm\";\nimport {\n  isUserProfileError,\n  userProfileErrorToString,\n} from \"./UserProfileFields\";\n\nimport \"./user-section.css\";\n\nexport default function CreateUser() {\n  const { t } = useTranslation(\"users\");\n  const { addAlert, addError } = useAlerts();\n  const navigate = useNavigate();\n  const { adminClient } = useAdminClient();\n  const { realm } = useRealm();\n  const userForm = useForm<UserRepresentation>({ mode: \"onChange\" });\n  const [addedGroups, setAddedGroups] = useState<GroupRepresentation[]>([]);\n\n  const save = async (formUser: UserRepresentation) => {\n    try {\n      const createdUser = await adminClient.users.create({\n        ...formUser,\n        username: formUser.username?.trim(),\n        groups: addedGroups.map((group) => group.path!),\n        enabled: true,\n      });\n\n      addAlert(t(\"userCreated\"), AlertVariant.success);\n      navigate(toUser({ id: createdUser.id, realm, tab: \"settings\" }));\n    } catch (error) {\n      if (isUserProfileError(error)) {\n        addError(userProfileErrorToString(error), error);\n      } else {\n        addError(\"users:userCreateError\", error);\n      }\n    }\n  };\n\n  return (\n    <>\n      <ViewHeader\n        titleKey={t(\"createUser\")}\n        className=\"kc-username-view-header\"\n      />\n      <PageSection variant=\"light\" className=\"pf-u-p-0\">\n        <UserProfileProvider>\n          <FormProvider {...userForm}>\n            <PageSection variant=\"light\">\n              <UserForm onGroupsUpdate={setAddedGroups} save={save} />\n            </PageSection>\n          </FormProvider>\n        </UserProfileProvider>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["CreateUser","useTranslation","addAlert","addError","useAlerts","navigate","useNavigate","adminClient","useAdminClient","realm","useRealm","userForm","useForm","addedGroups","setAddedGroups","useState","save","formUser","createdUser","group","AlertVariant","toUser","error","isUserProfileError","userProfileErrorToString","jsxs","Fragment","jsx","ViewHeader","PageSection","UserProfileProvider","FormProvider","UserForm"],"mappings":"0xCAsBA,SAAwBA,IAAa,CACnC,KAAM,CAAE,CAAA,EAAMC,EAAe,OAAO,EAC9B,CAAE,SAAAC,EAAU,SAAAC,CAAS,EAAIC,EAAU,EACnCC,EAAWC,IACX,CAAE,YAAAC,GAAgBC,IAClB,CAAE,MAAAC,GAAUC,IACZC,EAAWC,EAA4B,CAAE,KAAM,UAAY,CAAA,EAC3D,CAACC,EAAaC,CAAc,EAAIC,EAAA,SAAgC,CAAE,CAAA,EAElEC,EAAO,MAAOC,GAAiC,CAC/C,GAAA,CACF,MAAMC,EAAc,MAAMX,EAAY,MAAM,OAAO,CACjD,GAAGU,EACH,SAAUA,EAAS,UAAU,KAAK,EAClC,OAAQJ,EAAY,IAAKM,GAAUA,EAAM,IAAK,EAC9C,QAAS,EAAA,CACV,EAEDjB,EAAS,EAAE,aAAa,EAAGkB,EAAa,OAAO,EACtCf,EAAAgB,EAAO,CAAE,GAAIH,EAAY,GAAI,MAAAT,EAAO,IAAK,UAAY,CAAA,CAAC,QACxDa,GACHC,EAAmBD,CAAK,EACjBnB,EAAAqB,EAAyBF,CAAK,EAAGA,CAAK,EAE/CnB,EAAS,wBAAyBmB,CAAK,CAE3C,CAAA,EAGF,OAEIG,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAC,EAAA,IAACC,EAAA,CACC,SAAU,EAAE,YAAY,EACxB,UAAU,yBAAA,CACZ,EACAD,EAAA,IAACE,EAAY,CAAA,QAAQ,QAAQ,UAAU,WACrC,SAACF,EAAAA,IAAAG,EAAA,CACC,SAACH,EAAA,IAAAI,EAAA,CAAc,GAAGpB,EAChB,eAACkB,EAAY,CAAA,QAAQ,QACnB,SAAAF,EAAA,IAACK,EAAS,CAAA,eAAgBlB,EAAgB,KAAAE,CAAY,CAAA,CACxD,CAAA,CACF,CAAA,CACF,CAAA,EACF,CACF,CAAA,CAAA,CAEJ"}