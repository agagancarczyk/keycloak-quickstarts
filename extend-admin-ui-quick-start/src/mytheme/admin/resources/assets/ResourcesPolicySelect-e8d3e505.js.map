{"version":3,"file":"ResourcesPolicySelect-e8d3e505.js","sources":["../../src/clients/authorization/ResourcesPolicySelect.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\n\nimport type ResourceRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/resourceRepresentation\";\nimport type PolicyRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/policyRepresentation\";\nimport type {\n  Clients,\n  PolicyQuery,\n} from \"@keycloak/keycloak-admin-client/lib/resources/clients\";\nimport { useAdminClient, useFetch } from \"../../context/auth/AdminClient\";\n\ntype Type = \"resources\" | \"policies\";\n\ntype ResourcesPolicySelectProps = {\n  name: Type;\n  clientId: string;\n  permissionId?: string;\n  variant?: SelectVariant;\n  preSelected?: string;\n  isRequired?: boolean;\n};\n\ntype Policies = {\n  id?: string;\n  name?: string;\n};\n\ntype TypeMapping = {\n  [key in Type]: {\n    searchFunction: keyof Pick<Clients, \"listPolicies\" | \"listResources\">;\n    fetchFunction: keyof Pick<\n      Clients,\n      \"getAssociatedPolicies\" | \"getAssociatedResources\"\n    >;\n  };\n};\n\nconst typeMapping: TypeMapping = {\n  resources: {\n    searchFunction: \"listResources\",\n    fetchFunction: \"getAssociatedResources\",\n  },\n  policies: {\n    searchFunction: \"listPolicies\",\n    fetchFunction: \"getAssociatedPolicies\",\n  },\n};\n\nexport const ResourcesPolicySelect = ({\n  name,\n  clientId,\n  permissionId,\n  variant = SelectVariant.typeaheadMulti,\n  preSelected,\n  isRequired = false,\n}: ResourcesPolicySelectProps) => {\n  const { t } = useTranslation(\"clients\");\n  const { adminClient } = useAdminClient();\n\n  const {\n    control,\n    formState: { errors },\n  } = useFormContext<PolicyRepresentation>();\n  const [items, setItems] = useState<Policies[]>([]);\n  const [search, setSearch] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const functions = typeMapping[name];\n\n  const convert = (\n    p: PolicyRepresentation | ResourceRepresentation\n  ): Policies => ({\n    id: \"_id\" in p ? p._id : \"id\" in p ? p.id : undefined,\n    name: p.name,\n  });\n\n  useFetch(\n    async () => {\n      const params: PolicyQuery = Object.assign(\n        { id: clientId, first: 0, max: 10, permission: \"false\" },\n        search === \"\" ? null : { name: search }\n      );\n      return (\n        await Promise.all([\n          adminClient.clients[functions.searchFunction](params),\n          permissionId\n            ? adminClient.clients[functions.fetchFunction]({\n                id: clientId,\n                permissionId,\n              })\n            : Promise.resolve([]),\n        ])\n      )\n        .flat()\n        .filter(\n          (r): r is PolicyRepresentation | ResourceRepresentation =>\n            typeof r !== \"string\"\n        )\n        .map(convert)\n        .filter(\n          ({ id }, index, self) =>\n            index === self.findIndex(({ id: otherId }) => id === otherId)\n        );\n    },\n    setItems,\n    [search]\n  );\n\n  const toSelectOptions = () =>\n    items.map((p) => (\n      <SelectOption key={p.id} value={p.id}>\n        {p.name}\n      </SelectOption>\n    ));\n\n  return (\n    <Controller\n      name={name}\n      defaultValue={preSelected ? [preSelected] : []}\n      control={control}\n      rules={{ validate: (value) => !isRequired || value!.length > 0 }}\n      render={({ field }) => (\n        <Select\n          toggleId={name}\n          variant={variant}\n          onToggle={setOpen}\n          onFilter={(_, filter) => {\n            setSearch(filter);\n            return toSelectOptions();\n          }}\n          onClear={() => {\n            field.onChange([]);\n            setSearch(\"\");\n          }}\n          selections={field.value}\n          onSelect={(_, selectedValue) => {\n            const option = selectedValue.toString();\n            const changedValue = field.value?.find((p: string) => p === option)\n              ? field.value.filter((p: string) => p !== option)\n              : [...field.value!, option];\n            field.onChange(changedValue);\n            setSearch(\"\");\n          }}\n          isOpen={open}\n          aria-labelledby={t(name)}\n          isDisabled={!!preSelected}\n          validated={errors[name] ? \"error\" : \"default\"}\n          typeAheadAriaLabel={t(name)}\n        >\n          {toSelectOptions()}\n        </Select>\n      )}\n    />\n  );\n};\n"],"names":["typeMapping","ResourcesPolicySelect","name","clientId","permissionId","variant","SelectVariant","preSelected","isRequired","t","useTranslation","adminClient","useAdminClient","control","errors","useFormContext","items","setItems","useState","search","setSearch","open","setOpen","functions","convert","p","useFetch","params","r","id","index","self","otherId","toSelectOptions","jsx","SelectOption","Controller","value","field","Select","_","filter","selectedValue","option","changedValue"],"mappings":"yIAuCA,MAAMA,EAA2B,CAC/B,UAAW,CACT,eAAgB,gBAChB,cAAe,wBACjB,EACA,SAAU,CACR,eAAgB,eAChB,cAAe,uBACjB,CACF,EAEaC,EAAwB,CAAC,CACpC,KAAAC,EACA,SAAAC,EACA,aAAAC,EACA,QAAAC,EAAUC,EAAc,eACxB,YAAAC,EACA,WAAAC,EAAa,EACf,IAAkC,CAChC,KAAM,CAAE,EAAAC,CAAA,EAAMC,EAAe,SAAS,EAChC,CAAE,YAAAC,GAAgBC,IAElB,CACJ,QAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,GAClBC,EAAqC,EACnC,CAACC,EAAOC,CAAQ,EAAIC,EAAA,SAAqB,CAAE,CAAA,EAC3C,CAACC,EAAQC,CAAS,EAAIF,WAAS,EAAE,EACjC,CAACG,EAAMC,CAAO,EAAIJ,WAAS,EAAK,EAEhCK,EAAYvB,EAAYE,CAAI,EAE5BsB,EACJC,IACc,CACd,GAAI,QAASA,EAAIA,EAAE,IAAM,OAAQA,EAAIA,EAAE,GAAK,OAC5C,KAAMA,EAAE,IAAA,GAGVC,EACE,SAAY,CACV,MAAMC,EAAsB,OAAO,OACjC,CAAE,GAAIxB,EAAU,MAAO,EAAG,IAAK,GAAI,WAAY,OAAQ,EACvDgB,IAAW,GAAK,KAAO,CAAE,KAAMA,CAAO,CAAA,EAGtC,OAAA,MAAM,QAAQ,IAAI,CAChBR,EAAY,QAAQY,EAAU,cAAc,EAAEI,CAAM,EACpDvB,EACIO,EAAY,QAAQY,EAAU,aAAa,EAAE,CAC3C,GAAIpB,EACJ,aAAAC,CAAA,CACD,EACD,QAAQ,QAAQ,EAAE,CAAA,CACvB,GAEA,KAAA,EACA,OACEwB,GACC,OAAOA,GAAM,QAAA,EAEhB,IAAIJ,CAAO,EACX,OACC,CAAC,CAAE,GAAAK,CAAG,EAAGC,EAAOC,IACdD,IAAUC,EAAK,UAAU,CAAC,CAAE,GAAIC,CAAQ,IAAMH,IAAOG,CAAO,CAAA,CAEpE,EACAf,EACA,CAACE,CAAM,CAAA,EAGT,MAAMc,EAAkB,IACtBjB,EAAM,IAAKS,GACTS,EAAAA,IAACC,EAAwB,CAAA,MAAOV,EAAE,GAC/B,SAAAA,EAAE,IADc,EAAAA,EAAE,EAErB,CACD,EAGD,OAAAS,EAAA,IAACE,EAAA,CACC,KAAAlC,EACA,aAAcK,EAAc,CAACA,CAAW,EAAI,CAAC,EAC7C,QAAAM,EACA,MAAO,CAAE,SAAWwB,GAAU,CAAC7B,GAAc6B,EAAO,OAAS,CAAE,EAC/D,OAAQ,CAAC,CAAE,MAAAC,CAAA,IACTJ,EAAA,IAACK,EAAA,CACC,SAAUrC,EACV,QAAAG,EACA,SAAUiB,EACV,SAAU,CAACkB,EAAGC,KACZrB,EAAUqB,CAAM,EACTR,EAAgB,GAEzB,QAAS,IAAM,CACPK,EAAA,SAAS,CAAA,CAAE,EACjBlB,EAAU,EAAE,CACd,EACA,WAAYkB,EAAM,MAClB,SAAU,CAACE,EAAGE,IAAkB,CACxB,MAAAC,EAASD,EAAc,WACvBE,EAAeN,EAAM,OAAO,KAAMb,GAAcA,IAAMkB,CAAM,EAC9DL,EAAM,MAAM,OAAQb,GAAcA,IAAMkB,CAAM,EAC9C,CAAC,GAAGL,EAAM,MAAQK,CAAM,EAC5BL,EAAM,SAASM,CAAY,EAC3BxB,EAAU,EAAE,CACd,EACA,OAAQC,EACR,kBAAiBZ,EAAEP,CAAI,EACvB,WAAY,CAAC,CAACK,EACd,UAAWO,EAAOZ,CAAI,EAAI,QAAU,UACpC,mBAAoBO,EAAEP,CAAI,EAEzB,SAAgB+B,EAAA,CAAA,CACnB,CAAA,CAAA,CAIR"}