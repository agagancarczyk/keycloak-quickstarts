import{r as a,_ as w,ai as j,i as l}from"./index-a3421f29.js";const e={card:"pf-c-card",cardActions:"pf-c-card__actions",cardBody:"pf-c-card__body",cardExpandableContent:"pf-c-card__expandable-content",cardFooter:"pf-c-card__footer",cardHeader:"pf-c-card__header",cardHeaderToggle:"pf-c-card__header-toggle",cardHeaderToggleIcon:"pf-c-card__header-toggle-icon",cardSrInput:"pf-c-card__sr-input",cardTitle:"pf-c-card__title",divider:"pf-c-divider",modifiers:{hoverable:"pf-m-hoverable",selectable:"pf-m-selectable",selected:"pf-m-selected",hoverableRaised:"pf-m-hoverable-raised",selectableRaised:"pf-m-selectable-raised",nonSelectableRaised:"pf-m-non-selectable-raised",selectedRaised:"pf-m-selected-raised",compact:"pf-m-compact",displayLg:"pf-m-display-lg",flat:"pf-m-flat",plain:"pf-m-plain",rounded:"pf-m-rounded",expanded:"pf-m-expanded",fullHeight:"pf-m-full-height",toggleRight:"pf-m-toggle-right",noOffset:"pf-m-no-offset",noFill:"pf-m-no-fill",overpassFont:"pf-m-overpass-font"},themeDark:"pf-theme-dark"},B=a.createContext({cardId:"",registerTitleId:()=>{},isExpanded:!1}),C=f=>{var{children:I=null,id:s="",className:_="",component:S="article",isHoverable:R=!1,isCompact:p=!1,isSelectable:m=!1,isSelectableRaised:b=!1,isSelected:t=!1,isDisabledRaised:u=!1,isFlat:x=!1,isExpanded:g=!1,isRounded:v=!1,isLarge:d=!1,isFullHeight:y=!1,isPlain:E=!1,ouiaId:H,ouiaSafe:L=!0,hasSelectableInput:r=!1,selectableInputAriaLabel:c,onSelectableInputChange:T=()=>{}}=f,F=w(f,["children","id","className","component","isHoverable","isCompact","isSelectable","isSelectableRaised","isSelected","isDisabledRaised","isFlat","isExpanded","isRounded","isLarge","isFullHeight","isPlain","ouiaId","ouiaSafe","hasSelectableInput","selectableInputAriaLabel","onSelectableInputChange"]);const P=S,A=j(C.displayName,H,L),[o,N]=a.useState(""),[k,n]=a.useState();p&&d&&(console.warn("Card: Cannot use isCompact with isLarge. Defaulting to isCompact"),d=!1);const D=()=>u?l(e.modifiers.nonSelectableRaised):b?l(e.modifiers.selectableRaised,t&&e.modifiers.selectedRaised):m||R?l(e.modifiers.selectable,t&&e.modifiers.selected):"",h=a.useRef(!1),O=i=>{N(i),h.current=!!i};return a.useEffect(()=>{c?n({"aria-label":c}):o?n({"aria-labelledby":o}):r&&!h.current&&(n({}),console.warn("If no CardTitle component is passed as a child of Card the selectableInputAriaLabel prop must be passed"))},[r,c,o]),a.createElement(B.Provider,{value:{cardId:s,registerTitleId:O,isExpanded:g}},r&&a.createElement("input",Object.assign({className:"pf-screen-reader",id:`${s}-input`},k,{type:"checkbox",checked:t,onChange:i=>T(s,i),disabled:u,tabIndex:-1})),a.createElement(P,Object.assign({id:s,className:l(e.card,p&&e.modifiers.compact,g&&e.modifiers.expanded,x&&e.modifiers.flat,v&&e.modifiers.rounded,d&&e.modifiers.displayLg,y&&e.modifiers.fullHeight,E&&e.modifiers.plain,D(),_),tabIndex:m||b?"0":void 0},F,A),I))};C.displayName="Card";export{C,B as a,e as s};
//# sourceMappingURL=Card-aa3ba03c.js.map
