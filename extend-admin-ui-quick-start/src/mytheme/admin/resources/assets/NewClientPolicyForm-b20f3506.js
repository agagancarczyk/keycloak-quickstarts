import{u as F,d as te,r as C,n as oe,j as e,X as se,B as x,E as je,c as be,e as ke,b as Se,f as De,R as ve,k as R,A as h,d1 as k,d0 as S,C as Te,P as Ne,F as U,V as D,G as v,L as B,dh as we,di as Ie,U as X,d4 as Fe,w as Le}from"./index-a3421f29.js";import{u as T}from"./ConfirmDialog-09ff7a12.js";import{F as Ke}from"./FormAccess-1cceaef6.js";import{K as Ve}from"./KeycloakTextArea-1b518857.js";import{K as Ae}from"./KeycloakTextInput-e7f6e917.js";import{V as Ee}from"./ViewHeader-832ec56e.js";import{u as Re}from"./useParams-5abeab7d.js";import{K as Be}from"./KeycloakDataTable-10a62d94.js";import{L as Me}from"./PaginatingTableToolbar-08ca9efb.js";import{M as Ge,a as $e}from"./Modal-21c37af7.js";import"./realm-settings-section-4ed993c7.js";import{A as Oe}from"./Form-518a2cf2.js";import{F as J,a as N}from"./FlexItem-65b5f999.js";import{T as w,a as I}from"./Text-564bf299.js";import{P as Q}from"./plus-circle-icon-cb854796.js";import{e as W,D as Y,a as Z,c as _,d as ee}from"./DataListItemRow-75e02946.js";import{T as ie}from"./trash-icon-593b2b02.js";import"./copy-icon-a4fe01af.js";import"./GridItem-d34dae2e.js";import"./ToolbarContent-7b435752.js";import"./Td-6d4ab209.js";import"./star-icon-6a7e7d25.js";import"./check-fc57dbe1.js";import"./grip-vertical-icon-cbeff50f.js";import"./Checkbox-d00621d8.js";import"./EmptyStateBody-7b4fcee1.js";import"./EmptyStateSecondaryActions-08edafb5.js";import"./TableToolbar-ee0c86ef.js";import"./data-list-7d55714c.js";const He=({name:t,global:l})=>{const{t:d}=F("roles");return e.jsxs(e.Fragment,{children:[t," ",l&&e.jsx(je,{color:"blue",children:d("realm-settings:global")})]})},qe=t=>{const{t:l}=F("roles"),{adminClient:d}=te(),[p,m]=C.useState([]),[n,b]=C.useState();oe(()=>d.clientPolicies.listProfiles({includeGlobalProfiles:!0}),g=>{const u=g.globalProfiles?.map(P=>({...P,global:!0})),K=g.profiles?.map(P=>({...P,global:!1}));b([...u??[],...K??[]])},[]);const L=async()=>n?.filter(g=>!t.allProfiles.includes(g.name))??[];return n?e.jsx(Ge,{"data-testid":"addClientProfile",title:l("realm-settings:addClientProfile"),isOpen:t.open,onClose:t.toggleDialog,variant:$e.large,actions:[e.jsx(x,{"data-testid":"add-client-profile-button",variant:"primary",isDisabled:!p.length,onClick:()=>{t.toggleDialog(),t.onConfirm(p)},children:l("common:add")},"add"),e.jsx(x,{variant:"link",onClick:()=>{t.toggleDialog()},children:l("common:cancel")},"cancel")],children:e.jsx(Be,{loader:L,ariaLabelKey:"realm-settings:profilesList",searchPlaceholderKey:"realm-settings:searchProfile",canSelectAll:!0,onSelect:g=>{m([...g])},columns:[{name:"name",displayKey:"realm-settings:clientProfileName",cellRenderer:He},{name:"description",displayKey:"common:description"}],emptyState:e.jsx(Me,{hasIcon:!0,message:l("noRoles"),instructions:l("noRolesInstructions"),primaryActionText:l("createRole")})})}):e.jsx(se,{})},ze={name:"",description:"",conditions:[],enabled:!0,profiles:[]};function bi(){const{t}=F("realm-settings"),{realm:l}=be(),{addAlert:d,addError:p}=ke(),{adminClient:m}=te(),[n,b]=C.useState(),[L,g]=C.useState([]),[u,K]=C.useState(),[P,M]=C.useState(!1),[V,le]=C.useState(),[G,ne]=C.useState(!1),[A,ae]=C.useState(),{policyName:a}=Re(),y=Se(),r=De({mode:"onChange",defaultValues:ze}),{handleSubmit:re}=r,E=r.getValues(),ce=({save:i,onChange:o,value:s})=>{const{t:f}=F("realm-settings"),[c,he]=T({titleKey:"realm-settings:disablePolicyConfirmTitle",messageKey:"realm-settings:disablePolicyConfirm",continueButtonLabel:"common:disable",onConfirm:()=>{o(!s),i()}});return n?e.jsxs(e.Fragment,{children:[e.jsx(he,{}),e.jsx(pe,{}),e.jsx(Ee,{titleKey:P||a?a:"realm-settings:createPolicy",divider:!0,dropdownItems:P||a?[e.jsx(Le,{value:"delete",onClick:()=>{fe()},"data-testid":"deleteClientPolicyDropdown",children:f("deleteClientPolicy")},"delete")]:void 0,isEnabled:s,onToggle:z=>{z?(o(z),i()):c()}})]}):e.jsx(se,{})};oe(async()=>{const[i,o]=await Promise.all([m.clientPolicies.listPolicies(),m.clientPolicies.listProfiles({includeGlobalProfiles:!0})]);return{policies:i,profiles:o}},({policies:i,profiles:o})=>{const s=i.policies?.find(c=>c.name===a),f=[...o.globalProfiles??[],...o.profiles??[]];b(i.policies??[]),s&&(de(s),g(f),K(s),M(!0))},[]);const de=i=>{r.reset(i)},$=(n||[]).filter(i=>i.name===a),O=$[0]?.conditions||[],j=$[0]?.profiles||[],me=ve().componentTypes?.["org.keycloak.services.clientpolicy.condition.ClientPolicyConditionProvider"],H=async()=>{const i=r.getValues(),o={...i,profiles:[],conditions:[]},s=()=>n?.some(c=>c.name===o.name)?n?.map(c=>c.name===o.name?o:c):i.name!==a?n?.filter(c=>c.name!==a).concat(i):n?.concat(i);try{await m.clientPolicies.updatePolicy({policies:s()}),d(t(a?"realm-settings:updateClientPolicySuccess":"realm-settings:createClientPolicySuccess"),h.success),y(S({realm:l,policyName:i.name})),M(!0)}catch(f){p("realm-settings:createClientPolicyError",f)}},[fe,pe]=T({titleKey:t("deleteClientPolicyConfirmTitle"),messageKey:t("deleteClientPolicyConfirm",{policyName:a}),continueButtonLabel:t("delete"),continueButtonVariant:R.danger,onConfirm:async()=>{const i=n?.filter(o=>o.name!==a);try{await m.clientPolicies.updatePolicy({policies:i}),d(t("deleteClientPolicySuccess"),h.success),y(k({realm:l,tab:"policies"}))}catch(o){p(t("deleteClientPolicyError"),o)}}}),[ue,Pe]=T({titleKey:t("deleteClientPolicyConditionConfirmTitle"),messageKey:t("deleteClientPolicyConditionConfirm",{condition:V?.name}),continueButtonLabel:t("delete"),continueButtonVariant:R.danger,onConfirm:async()=>{if(V?.name){u?.conditions?.splice(V.idx,1);try{await m.clientPolicies.updatePolicy({policies:n}),d(t("deleteConditionSuccess"),h.success),y(S({realm:l,policyName:E.name}))}catch(i){p(t("deleteConditionError"),i)}}else{const i=n?.filter(o=>o.name!==a);try{await m.clientPolicies.updatePolicy({policies:i}),d(t("deleteClientSuccess"),h.success),y(k({realm:l,tab:"policies"}))}catch(o){p(t("deleteClientError"),o)}}}}),[Ce,ge]=T({titleKey:t("deleteClientPolicyProfileConfirmTitle"),messageKey:t("deleteClientPolicyProfileConfirm",{profileName:A?.name,policyName:a}),continueButtonLabel:t("delete"),continueButtonVariant:R.danger,onConfirm:async()=>{if(A?.name){u?.profiles?.splice(A.idx,1);try{await m.clientPolicies.updatePolicy({policies:n}),d(t("deleteClientPolicyProfileSuccess"),h.success),y(S({realm:l,policyName:E.name}))}catch(i){p(t("deleteClientPolicyProfileError"),i)}}else{const i=n?.filter(o=>o.name!==a);try{await m.clientPolicies.updatePolicy({policies:i}),d(t("deleteClientSuccess"),h.success),y(k({realm:l,tab:"policies"}))}catch(o){p(t("deleteClientError"),o)}}}}),ye=()=>{u?.name!==void 0&&r.setValue("name",u.name),u?.description!==void 0&&r.setValue("description",u.description)},q=()=>{ne(!G)},xe=async i=>{const o={...u,profiles:j.concat(i),conditions:u?.conditions},s=n?.findIndex(c=>o.name===c.name);if(s===void 0||s===-1)return;const f=[...(n||[]).slice(0,s),o,...(n||[]).slice(s+1)];try{await m.clientPolicies.updatePolicy({policies:f}),b(f),y(S({realm:l,policyName:E.name})),d(t("realm-settings:addClientProfileSuccess"),h.success)}catch(c){p("realm-settings:addClientProfileError",c)}};return e.jsxs(e.Fragment,{children:[e.jsx(Pe,{}),e.jsx(ge,{}),e.jsx(qe,{onConfirm:i=>{xe(i.map(o=>o.name))},allProfiles:j,open:G,toggleDialog:q}),e.jsx(Te,{name:"enabled",defaultValue:!0,control:r.control,render:({field:i})=>e.jsx(ce,{value:i.value,onChange:i.onChange,realmName:l,save:H})}),e.jsx(Ne,{variant:"light",children:e.jsxs(Ke,{onSubmit:re(H),isHorizontal:!0,role:"view-realm",className:"pf-u-mt-lg",children:[e.jsx(U,{label:t("common:name"),fieldId:"kc-client-profile-name",isRequired:!0,helperTextInvalid:r.formState.errors.name?.message,validated:r.formState.errors.name?D.error:D.default,children:e.jsx(Ae,{id:"kc-client-profile-name","data-testid":"client-policy-name",validated:r.formState.errors.name?D.error:D.default,...r.register("name",{required:{value:!0,message:t("common:required")},validate:i=>n?.some(o=>o.name===i)?t("createClientProfileNameHelperText").toString():!0})})}),e.jsx(U,{label:t("common:description"),fieldId:"kc-description",children:e.jsx(Ve,{"aria-label":t("description"),id:"kc-client-policy-description","data-testid":"client-policy-description",...r.register("description")})}),e.jsxs(Oe,{children:[e.jsx(x,{variant:"primary",type:"submit","data-testid":"saveCreatePolicy",isDisabled:!r.formState.isValid,children:t("common:save")}),e.jsx(x,{id:"cancelCreatePolicy",variant:"link",onClick:()=>P||a?ye():y(k({realm:l,tab:"policies"})),"data-testid":"cancelCreatePolicy",children:t(P?"common:reload":"common:cancel")})]}),(P||r.formState.isSubmitted)&&e.jsxs(e.Fragment,{children:[e.jsxs(J,{children:[e.jsx(N,{children:e.jsxs(w,{className:"kc-conditions",component:I.h1,children:[t("conditions"),e.jsx(v,{helpText:t("realm-settings-help:conditions"),fieldLabelId:"realm-settings:conditions"})]})}),e.jsx(N,{align:{default:"alignRight"},children:e.jsx(x,{id:"addCondition",component:i=>e.jsx(B,{...i,to:we({realm:l,policyName:a})}),variant:"link",className:"kc-addCondition","data-testid":"addCondition",icon:e.jsx(Q,{}),children:t("realm-settings:addCondition")})})]}),O.length>0?e.jsx(W,{"aria-label":t("conditions"),isCompact:!0,children:O.map((i,o)=>e.jsx(Y,{"aria-labelledby":"conditions-list-item",id:i.condition,"data-testid":"conditions-list-item",children:e.jsx(Z,{"data-testid":"conditions-list-row",children:e.jsx(_,{dataListCells:[e.jsxs(ee,{"data-testid":"condition-type",children:[Object.keys(i.configuration).length!==0?e.jsx(B,{"data-testid":`${i.condition}-condition-link`,to:Ie({realm:l,conditionName:i.condition,policyName:a}),className:"kc-condition-link",children:i.condition},i.condition):i.condition,me?.map(s=>s.id===i.condition&&e.jsxs(e.Fragment,{children:[e.jsx(v,{helpText:s.helpText,fieldLabelId:i.condition}),e.jsx(x,{variant:"link",isInline:!0,icon:e.jsx(ie,{className:"kc-conditionType-trash-icon","data-testid":`delete-${i.condition}-condition`,onClick:()=>{ue(),le({idx:o,name:s.id})}})})]}))]},`name-${o}`)]})})},`list-item-${o}`))}):e.jsxs(e.Fragment,{children:[e.jsx(X,{}),e.jsx(w,{className:"kc-emptyConditions",component:I.h6,children:t("realm-settings:emptyConditions")})]})]}),(P||r.formState.isSubmitted)&&e.jsxs(e.Fragment,{children:[e.jsxs(J,{children:[e.jsx(N,{children:e.jsxs(w,{className:"kc-client-profiles",component:I.h1,children:[t("clientProfiles"),e.jsx(v,{helpText:t("realm-settings-help:clientProfiles"),fieldLabelId:"realm-settings:clientProfiles"})]})}),e.jsx(N,{align:{default:"alignRight"},children:e.jsx(x,{id:"addClientProfile",variant:"link",className:"kc-addClientProfile","data-testid":"addClientProfile",icon:e.jsx(Q,{}),onClick:q,children:t("realm-settings:addClientProfile")})})]}),j.length>0?e.jsx(W,{"aria-label":t("profiles"),isCompact:!0,children:j.map((i,o)=>e.jsx(Y,{"aria-labelledby":`${i}-profile-list-item`,id:`${i}-profile-list-item`,"data-testid":"profile-list-item",children:e.jsx(Z,{"data-testid":"profile-list-row",children:e.jsx(_,{dataListCells:[e.jsxs(ee,{"data-testid":"profile-name",children:[i&&e.jsx(B,{"data-testid":"profile-name-link",to:Fe({realm:l,profileName:i}),className:"kc-profile-link",children:i},i),j.filter(s=>s===i).map(s=>e.jsxs(e.Fragment,{children:[e.jsx(v,{helpText:L.find(f=>s===f.name)?.description,fieldLabelId:i}),e.jsx(x,{variant:"link",isInline:!0,icon:e.jsx(ie,{className:"kc-conditionType-trash-icon","data-testid":"deleteClientProfileDropdown",onClick:()=>{Ce(),ae({idx:o,name:s})}})})]}))]},"name")]})})},i))}):e.jsxs(e.Fragment,{children:[e.jsx(X,{}),e.jsx(w,{className:"kc-emptyClientProfiles",component:I.h6,children:t("realm-settings:emptyProfiles")})]})]})]})})]})}export{bi as default};
//# sourceMappingURL=NewClientPolicyForm-b20f3506.js.map
