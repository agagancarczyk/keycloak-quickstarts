import{u,f as p,b as C,z as R,d as f,c as b,e as A,j as g,ab as x,A as j,aP as E}from"./index-a3421f29.js";import{R as h}from"./RoleForm-ecaa65a4.js";import"./FormAccess-1cceaef6.js";import"./copy-icon-a4fe01af.js";import"./Form-518a2cf2.js";import"./GridItem-d34dae2e.js";import"./KeycloakTextArea-1b518857.js";import"./KeycloakTextInput-e7f6e917.js";import"./ViewHeader-832ec56e.js";import"./Text-564bf299.js";import"./ToolbarContent-7b435752.js";function S(){const{t:i}=u("roles"),n=p({mode:"onChange"}),l=C(),{clientId:e}=R(),{adminClient:a}=f(),{realm:o}=b(),{addAlert:m,addError:c}=A(),d=async r=>{const s={...r,name:r.name?.trim(),attributes:{}};try{await a.clients.createRole({id:e,...s});const t=await a.clients.findRole({id:e,roleName:s.name});m(i("roleCreated"),j.success),l(E({realm:o,clientId:e,id:t.id,tab:"details"}))}catch(t){c("roles:roleCreateError",t)}};return g.jsx(h,{form:n,onSubmit:d,cancelLink:x({realm:o,clientId:e,tab:"roles"}),role:"manage-clients",editMode:!1})}export{S as default};
//# sourceMappingURL=CreateClientRole-3299a9fb.js.map
