{"version":3,"file":"ExtendedHeader-d25be090.js","sources":["../../src/user-federation/shared/ExtendedHeader.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  AlertVariant,\n  DropdownItem,\n  DropdownSeparator,\n} from \"@patternfly/react-core\";\n\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { useConfirmDialog } from \"../../components/confirm-dialog/ConfirmDialog\";\nimport { useAdminClient } from \"../../context/auth/AdminClient\";\nimport { Header } from \"./Header\";\nimport { useFormContext, useWatch } from \"react-hook-form\";\n\ntype ExtendedHeaderProps = {\n  provider: string;\n  editMode?: string | string[];\n  save: () => void;\n  noDivider?: boolean;\n};\n\nexport const ExtendedHeader = ({\n  provider,\n  editMode,\n  save,\n  noDivider = false,\n}: ExtendedHeaderProps) => {\n  const { t } = useTranslation(\"user-federation\");\n  const { id } = useParams<{ id: string }>();\n  const { adminClient } = useAdminClient();\n  const { addAlert, addError } = useAlerts();\n\n  const { control } = useFormContext();\n  const hasImportUsers = useWatch({\n    name: \"config.importEnabled\",\n    control,\n    defaultValue: [\"true\"],\n  })[0];\n\n  const [toggleUnlinkUsersDialog, UnlinkUsersDialog] = useConfirmDialog({\n    titleKey: \"user-federation:userFedUnlinkUsersConfirmTitle\",\n    messageKey: \"user-federation:userFedUnlinkUsersConfirm\",\n    continueButtonLabel: \"user-federation:unlinkUsers\",\n    onConfirm: () => unlinkUsers(),\n  });\n\n  const [toggleRemoveUsersDialog, RemoveUsersConfirm] = useConfirmDialog({\n    titleKey: t(\"removeImportedUsers\"),\n    messageKey: t(\"removeImportedUsersMessage\"),\n    continueButtonLabel: \"common:remove\",\n    onConfirm: async () => {\n      try {\n        removeImportedUsers();\n        addAlert(t(\"removeImportedUsersSuccess\"), AlertVariant.success);\n      } catch (error) {\n        addError(\"user-federation:removeImportedUsersError\", error);\n      }\n    },\n  });\n\n  const removeImportedUsers = async () => {\n    try {\n      if (id) {\n        await adminClient.userStorageProvider.removeImportedUsers({ id });\n      }\n      addAlert(t(\"removeImportedUsersSuccess\"), AlertVariant.success);\n    } catch (error) {\n      addError(\"user-federation:removeImportedUsersError\", error);\n    }\n  };\n\n  const syncChangedUsers = async () => {\n    try {\n      if (id) {\n        const response = await adminClient.userStorageProvider.sync({\n          id: id,\n          action: \"triggerChangedUsersSync\",\n        });\n        if (response.ignored) {\n          addAlert(`${response.status}.`, AlertVariant.warning);\n        } else {\n          addAlert(\n            t(\"syncUsersSuccess\") +\n              `${response.added} users added, ${response.updated} users updated, ${response.removed} users removed, ${response.failed} users failed.`,\n            AlertVariant.success\n          );\n        }\n      }\n    } catch (error) {\n      addError(\"user-federation:syncUsersError\", error);\n    }\n  };\n\n  const syncAllUsers = async () => {\n    try {\n      if (id) {\n        const response = await adminClient.userStorageProvider.sync({\n          id: id,\n          action: \"triggerFullSync\",\n        });\n        if (response.ignored) {\n          addAlert(`${response.status}.`, AlertVariant.warning);\n        } else {\n          addAlert(\n            t(\"syncUsersSuccess\") +\n              `${response.added} users added, ${response.updated} users updated, ${response.removed} users removed, ${response.failed} users failed.`,\n            AlertVariant.success\n          );\n        }\n      }\n    } catch (error) {\n      addError(\"user-federation:syncUsersError\", error);\n    }\n  };\n\n  const unlinkUsers = async () => {\n    try {\n      if (id) {\n        await adminClient.userStorageProvider.unlinkUsers({ id });\n      }\n      addAlert(t(\"unlinkUsersSuccess\"), AlertVariant.success);\n    } catch (error) {\n      addError(\"user-federation:unlinkUsersError\", error);\n    }\n  };\n\n  return (\n    <>\n      <UnlinkUsersDialog />\n      <RemoveUsersConfirm />\n      <Header\n        provider={provider}\n        noDivider={noDivider}\n        save={save}\n        dropdownItems={[\n          <DropdownItem\n            key=\"sync\"\n            onClick={syncChangedUsers}\n            isDisabled={hasImportUsers === \"false\"}\n          >\n            {t(\"syncChangedUsers\")}\n          </DropdownItem>,\n          <DropdownItem\n            key=\"syncall\"\n            onClick={syncAllUsers}\n            isDisabled={hasImportUsers === \"false\"}\n          >\n            {t(\"syncAllUsers\")}\n          </DropdownItem>,\n          <DropdownItem\n            key=\"unlink\"\n            isDisabled={editMode ? !editMode.includes(\"UNSYNCED\") : false}\n            onClick={toggleUnlinkUsersDialog}\n          >\n            {t(\"unlinkUsers\")}\n          </DropdownItem>,\n          <DropdownItem key=\"remove\" onClick={toggleRemoveUsersDialog}>\n            {t(\"removeImported\")}\n          </DropdownItem>,\n          <DropdownSeparator key=\"separator\" />,\n        ]}\n      />\n    </>\n  );\n};\n"],"names":["ExtendedHeader","provider","editMode","save","noDivider","t","useTranslation","id","useParams","adminClient","useAdminClient","addAlert","addError","useAlerts","control","useFormContext","hasImportUsers","useWatch","toggleUnlinkUsersDialog","UnlinkUsersDialog","useConfirmDialog","unlinkUsers","toggleRemoveUsersDialog","RemoveUsersConfirm","removeImportedUsers","AlertVariant","error","syncChangedUsers","response","syncAllUsers","jsxs","Fragment","jsx","Header","DropdownItem","DropdownSeparator"],"mappings":"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"}