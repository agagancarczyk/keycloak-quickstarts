import{u as $,e as H,b as L,c as _,r as c,z as q,R as J,f as K,d as M,n as Q,j as i,P as U,F as W,G as X,C as Y,g as Z,B as T,d0 as j,A as tt}from"./index-a3421f29.js";import{D as it}from"./DynamicComponents-72877b30.js";import{F as ot}from"./FormAccess-1cceaef6.js";import{F as et}from"./FormPanel-11cb7e22.js";import{c as v}from"./camelCase-7fbe8a69.js";import{S as nt,a as st,b as rt}from"./Select-0f56a9cc.js";import{A as at}from"./Form-518a2cf2.js";import"./ClientSelect-3f0fc581.js";import"./FileUpload-ca37c1a6.js";import"./CodeEditor-2fb93648.js";import"./copy-icon-a4fe01af.js";import"./EmptyStateBody-7b4fcee1.js";import"./EmptyStateSecondaryActions-08edafb5.js";import"./GroupPickerDialog-caf8c38d.js";import"./PaginatingTableToolbar-08ca9efb.js";import"./plus-circle-icon-cb854796.js";import"./TableToolbar-ee0c86ef.js";import"./ToolbarContent-7b435752.js";import"./DataListItemRow-75e02946.js";import"./data-list-7d55714c.js";import"./grip-vertical-icon-cbeff50f.js";import"./Modal-21c37af7.js";import"./ActionListItem-ab1a4322.js";import"./FlexItem-65b5f999.js";import"./minus-circle-icon-6f9a971c.js";import"./MultiLineInput-14187d1c.js";import"./PasswordInput-85f9399f.js";import"./KeycloakTextInput-e7f6e917.js";import"./useToggle-a9cb2c55.js";import"./AddRoleMappingModal-abb19beb.js";import"./KeycloakDataTable-10a62d94.js";import"./Td-6d4ab209.js";import"./star-icon-6a7e7d25.js";import"./check-fc57dbe1.js";import"./Checkbox-d00621d8.js";import"./useLocaleSort-3efc7c31.js";import"./resource-08ae7dbc.js";import"./joinPath-55fd24bc.js";import"./filter-icon-9d72dc58.js";import"./ConfirmDialog-09ff7a12.js";import"./KeycloakTextArea-1b518857.js";import"./GridItem-d34dae2e.js";import"./CardHeader-457352d1.js";import"./Card-aa3ba03c.js";import"./CardTitle-9175b04a.js";import"./CardBody-519f6395.js";import"./capitalize-e93b891e.js";function ii(){const{t:e}=$("realm-settings"),{addAlert:b,addError:A}=H(),C=L(),{realm:f}=_(),[F,g]=c.useState(!1),[D,y]=c.useState([]),[I,N]=c.useState([]),[k,E]=c.useState(),[d,w]=c.useState(""),[x,h]=c.useState([]),{policyName:l,conditionName:o}=q(),B=J(),m=K(),P=B.componentTypes?.["org.keycloak.services.clientpolicy.condition.ClientPolicyConditionProvider"],{adminClient:S}=M(),G=r=>{m.reset({config:r.configuration||{}})};Q(()=>S.clientPolicies.listPolicies(),r=>{if(y(r.policies??[]),o){const s=r.policies?.find(t=>t.name===l)?.conditions?.find(t=>t.condition===o),p=P?.find(t=>t.id===o);E(s),h(p?.properties),G(s)}},[]);const V=async r=>{const n=r.config,s=()=>x.reduce((t,a)=>(t[a.name]=n[a.name],t),{}),p=D.map(t=>{if(t.name!==l)return t;let a=t.conditions??[];if(o){const O={condition:k?.condition,configuration:s()},u=a.findIndex(z=>o===z.condition);if(u===-1)return;const R=[...a.slice(0,u),O,...a.slice(u+1)];return{...t,conditions:R}}return a=a.concat({condition:I[0].condition,configuration:s()}),{...t,conditions:a}});try{await S.clientPolicies.updatePolicy({policies:p}),y(p),C(j({realm:f,policyName:l})),b(e(o?"realm-settings:updateClientConditionSuccess":"realm-settings:createClientConditionSuccess"),tt.success)}catch(t){A("realm-settings:createClientConditionError",t)}};return i.jsx(U,{variant:"light",children:i.jsx(et,{className:"kc-login-screen",title:e(o?"editCondition":"addCondition"),children:i.jsxs(ot,{isHorizontal:!0,role:"manage-realm",className:"pf-u-mt-lg",onSubmit:m.handleSubmit(V),children:[i.jsx(W,{label:e("conditionType"),fieldId:"conditionType",labelIcon:i.jsx(X,{helpText:d?`realm-settings-help:${v(d.replace(/-/g," "))}`:"realm-settings-help:conditions",fieldLabelId:"realm-settings:conditionType"}),children:i.jsx(Y,{name:"conditions",defaultValue:"any-client",control:m.control,render:({field:r})=>i.jsx(nt,{placeholderText:e("selectACondition"),className:"kc-conditionType-select","data-testid":"conditionType-select",toggleId:"provider",isDisabled:!!o,onToggle:n=>g(n),onSelect:(n,s)=>{r.onChange(s),h(s.properties),w(s.id),N([{condition:s.id}]),g(!1)},selections:o||d,variant:st.single,"aria-label":e("conditionType"),isOpen:F,children:P?.map(n=>i.jsx(rt,{selected:n.id===r.value,description:e(`realm-settings-help:${v(n.id.replace(/-/g," "))}`),value:n,children:n.id},n.id))})})}),i.jsx(Z,{...m,children:i.jsx(it,{properties:x})}),i.jsxs(at,{children:[i.jsx(T,{variant:"primary",type:"submit","data-testid":"addCondition-saveBtn",isDisabled:d===""&&!o,children:e(o?"common:save":"common:add")}),i.jsx(T,{variant:"link","data-testid":"addCondition-cancelBtn",onClick:()=>C(j({realm:f,policyName:l})),children:e("common:cancel")})]})]})})})}export{ii as default};
//# sourceMappingURL=NewClientPolicyCondition-fd1471db.js.map
